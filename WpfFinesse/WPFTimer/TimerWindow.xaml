<Window x:Class="WpfFinesse.WPFTimer.TimerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfFinesse.WPFTimer"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
        mc:Ignorable="d"
        Title="TimerWindow" MinWidth="380" MaxWidth="380" MinHeight="500"
        WindowStartupLocation="CenterScreen">
    <Window.Resources>

        <!--Start Converters-->

        <local:ToolTipCon x:Key="ToolTipCon"></local:ToolTipCon>


        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <local:TextInputToVisibilityConverter x:Key="TextInputToVisibilityConverter" />
        <!--End Converters-->

        <!--Start Colors-->
        <Color x:Key="TabItemNonActiveForegroundColor">#d3d3d3</Color>
        <Color x:Key="TabItemActiveColor">#F4F4F4</Color>
        <Color x:Key="GridSortingArrowActiveColor">#605555</Color>
        <Color x:Key="GridSortingArrowColor">#9b9898</Color>
        <Color x:Key="DataGridColumnHeaderColor">#DEDEDE</Color>
        <Color x:Key="AlternativeGridRowColor">#eaeaea</Color>
        <Color x:Key="ScrollBarTrackColor">#DEDEDE</Color>
        <Color x:Key="TransparentColor">#0000ffff</Color>
        <Color x:Key="DataGridCellSelected">#CCDAFF</Color>
        <Color x:Key="BackgroundColor">#A6A6A6</Color>
        <Color x:Key="StandardColor">#A7A7A7</Color>
        <Color x:Key="BorderColor">#C8C6C6</Color>
        <Color x:Key="ForegroundPhonebookColor">#c7c2c2</Color>
        <Color x:Key="ForegroundPhonebookContactColor">#938c8c</Color>
        <Color x:Key="HoverColor"></Color>
        <Color x:Key="PressedColor"></Color>
        <SolidColorBrush x:Key="StandardBrush" Color="{StaticResource StandardColor}" />
        <SolidColorBrush x:Key="HoverBrush" Color="{StaticResource HoverColor}" />
        <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}" />
        <SolidColorBrush x:Key="DataGridCellSelectedBrush" Color="{StaticResource DataGridCellSelected}"/>
        <SolidColorBrush x:Key="TransparentColorBrush" Color="{StaticResource TransparentColor}"/>
        <SolidColorBrush x:Key="ScrollBarTrackColorBrush" Color="{StaticResource ScrollBarTrackColor}"/>
        <SolidColorBrush x:Key="AlternativeGridRowColorBrush" Color="{StaticResource AlternativeGridRowColor}"/>
        <SolidColorBrush x:Key="DataGridColumnHeaderColorBrush" Color="{StaticResource DataGridColumnHeaderColor}"/>
        <SolidColorBrush x:Key="GridSortingArrowColorBrush" Color="{StaticResource GridSortingArrowColor}"></SolidColorBrush>
        <SolidColorBrush x:Key="GridSortingArrowActiveColorBrush" Color="{StaticResource GridSortingArrowActiveColor}"></SolidColorBrush>
        <SolidColorBrush x:Key="TabItemActiveColorBrush" Color="{StaticResource TabItemActiveColor}"></SolidColorBrush>
        <SolidColorBrush x:Key="TabItemNonActiveForegroundColorBrush" Color="{StaticResource TabItemNonActiveForegroundColor}"></SolidColorBrush>
        <SolidColorBrush x:Key="BorderColorBrush" Color="{StaticResource BorderColor}"></SolidColorBrush>
        <SolidColorBrush x:Key="ForegroundPhonebookColorBrush" Color="{StaticResource ForegroundPhonebookColor}"></SolidColorBrush>
        <SolidColorBrush x:Key="ForegroundPhonebookContactColorBrush" Color="{StaticResource ForegroundPhonebookContactColor}"></SolidColorBrush>

        <!--End Colors-->


        <!--start expender-->
        <ControlTemplate x:Key="ExpanderToggleButton"
                 TargetType="{x:Type ToggleButton}">
            <Border x:Name="Border"
          CornerRadius="0,0,0,0"
          BorderThickness="0,0,0,0"
                    Background="Transparent">
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0,0"
                           EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="{DynamicResource BorderLightColor}"
                          Offset="0.0" />
                                <GradientStop Color="{DynamicResource BorderDarkColor}"
                          Offset="1.0" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>

                </Border.BorderBrush>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="CollapsedArrow">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                      Value="{x:Static Visibility.Hidden}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="ExpandededArrow">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                      Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid>
                    <Path x:Name="CollapsedArrow"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Data="M 0 0 L 6 6 L 12 0 Z" Fill="{StaticResource ForegroundPhonebookColorBrush}">

                    </Path>
                    <Path x:Name="ExpandededArrow"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Visibility="Collapsed"
            Data="M 0 6 L 6 0 L 12 6 Z"
                          Fill="{StaticResource ForegroundPhonebookColorBrush}">

                    </Path>
                </Grid>
            </Border>
        </ControlTemplate>

        <Style TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{StaticResource ForegroundPhonebookContactColorBrush}"></Setter>
            <Setter Property="FontWeight" Value="SemiBold"></Setter>
            <Setter Property="FontSize" Value="14"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ContentRow" Height="0" />
                            </Grid.RowDefinitions>
                            <Border x:Name="Border"
                                    Padding="5"
                                    Background="White"
                                    Grid.Row="0"
                                    BorderThickness="1 1 1 .5"
                                    BorderBrush="{StaticResource BorderColorBrush}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="20" />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton
                                        Cursor="Hand"
                                        OverridesDefaultStyle="True"
                                                  Grid.Column="1"
                                                  Template="{StaticResource ExpanderToggleButton}"
                                                  IsChecked="{Binding IsExpanded, Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}">
                                    </ToggleButton>
                                    <ContentPresenter Grid.Column="0" Margin="4" ContentSource="Header" RecognizesAccessKey="True" />
                                </Grid>
                            </Border>
                            <Border x:Name="Content"
                                    Background="White"
                                    Grid.Row="1"
                                    BorderThickness="1,.5,1,1"
                                    BorderBrush="{StaticResource BorderColorBrush}">
                                <ContentPresenter Margin="10" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="Border" Property="BorderThickness" Value="1 1 1 0"></Setter>
                                <Setter TargetName="Content" Property="BorderThickness" Value="1 0 1 1"></Setter>
                            </Trigger>

                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="ContentRow" Property="Height" Value="{Binding Height, ElementName=Content}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--end expender-->


        <!--start pagination-->
        <Style x:Key="btnPagination" TargetType="Button">
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Height" Value="18"></Setter>
            <Setter Property="Width" Value="18"></Setter>
            <Setter Property="Foreground" Value="{StaticResource BackgroundBrush}"></Setter>
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="2 0 0 0" ></Setter>
            <Setter Property="Padding" Value="2"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="2">
                            <ContentPresenter ContentSource="Content" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="FontWeight" Value="UltraBold"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--end pagination-->

        <!--Start Watermark Textbox for Search Phonebook-->
        <Style x:Key="WaterMarkPhoneSearch" TargetType="TextBox">
            <Setter Property="BorderBrush" Value="{StaticResource BorderColorBrush}"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                            <Grid>
                                <Label FontSize="12" Content="Search contact" Height="27" Foreground="{StaticResource BorderColorBrush}" Padding="5 0 0 0" VerticalAlignment="Center" VerticalContentAlignment="Center">
                                    <Label.Visibility>
                                        <MultiBinding Converter="{StaticResource TextInputToVisibilityConverter}">
                                            <Binding ElementName="InputText" Path="Text.IsEmpty"></Binding>
                                            <Binding ElementName="InputText" Path="IsFocused"></Binding>
                                        </MultiBinding>
                                    </Label.Visibility>
                                </Label>
                                <TextBox Height="27" Padding="5 0 0 0" FontSize="12" VerticalAlignment="Center" VerticalContentAlignment="Center" x:Name="InputText" Background="Transparent" BorderBrush="Transparent" BorderThickness="0"></TextBox>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--End Watermark Textbox Search Phonebook-->


        <!--Start Watermark Textbox for Search Team Performance-->
        <Style x:Key="WaterMarkTeamPerformanceSearch" TargetType="TextBox">
            <Setter Property="BorderBrush" Value="{StaticResource BorderColorBrush}"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                            <Grid>
                                <Label FontSize="12" Content="Search" Height="27" Foreground="{StaticResource BorderColorBrush}" Padding="5 0 0 0" VerticalAlignment="Center" VerticalContentAlignment="Center">
                                    <Label.Visibility>
                                        <MultiBinding Converter="{StaticResource TextInputToVisibilityConverter}">
                                            <Binding ElementName="InputText" Path="Text.IsEmpty"></Binding>
                                            <Binding ElementName="InputText" Path="IsFocused"></Binding>
                                        </MultiBinding>
                                    </Label.Visibility>
                                </Label>
                                <TextBox Height="27" Padding="5 0 0 0" FontSize="12" VerticalAlignment="Center" VerticalContentAlignment="Center" x:Name="InputText" Background="Transparent" BorderBrush="Transparent" BorderThickness="0"></TextBox>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--End Watermark Textbox Search Team Performance-->


        <!--Start Data Grid StatusTemplate-->
        <DataTemplate x:Key="StatusTemplate" >
            <Border VerticalAlignment="Center" HorizontalAlignment="Center" Width="120">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Height="40" VerticalAlignment="Center" Width="auto">
                    <Ellipse Height="7" Width="7" Fill="{Binding CallStatusColor}" Margin="5,0" VerticalAlignment="Center" HorizontalAlignment="Center"></Ellipse>
                    <TextBlock Text="{Binding CallStatus}" Width="100" TextTrimming="CharacterEllipsis"  VerticalAlignment="Center">
                        <TextBlock.ToolTip>
                            <ToolTip  ToolTipService.ShowDuration="12000" Placement="Bottom"  HorizontalOffset="0" VerticalOffset="0" BorderBrush="Transparent" Margin="0 10 0 0" Background="Transparent"  Panel.ZIndex="1000" Visibility="{Binding Path =CallStatus, Converter={StaticResource ToolTipCon}}">
                                <Grid Width="110" Background="{StaticResource BackgroundBrush}">
                                    <Polygon Points="5,0 10,10, 0,10" Stroke="{StaticResource BackgroundBrush}" Fill="{StaticResource BackgroundBrush}" Grid.Row="0" HorizontalAlignment="Center" Margin="0,-8,0,8" Panel.ZIndex="1000" StrokeThickness="2" StrokeDashArray="1 0"   />
                                    <Border x:Name="border" HorizontalAlignment="Center" VerticalAlignment="Top">
                                        <TextBlock Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding CallStatus}" Padding="10"></TextBlock>
                                    </Border>
                                </Grid>
                            </ToolTip>
                        </TextBlock.ToolTip>
                </TextBlock>
                </StackPanel>
            </Border>
        </DataTemplate>
        <!--End Data Grid StatusTemplate-->

        <!--Start Data Grid Cell Template-->
        <Style x:Key="Body_Content_DataGrid_Centering" TargetType="{x:Type DataGridCell}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Height" Value="40"></Setter>
            <Setter Property="BorderBrush" Value="Transparent"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <!--<Setter Property="Cursor" Value="Hand"></Setter>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <Border Padding="10 0 20 0">
                                <ContentPresenter VerticalAlignment="Center" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="DataGridCell.IsSelected" Value="True">
                    <Setter Property="BorderThickness" Value="1"></Setter>
                    <Setter Property="BorderBrush" Value="#CCDAFF"></Setter>
                    <Setter Property="Background" Value="{StaticResource DataGridCellSelectedBrush}" />
                    <Setter Property="Foreground" Value="Blue"></Setter>
                    <Setter Property="FontWeight" Value="DemiBold"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--End Data Grid Cell Template-->

        <!--Start Vertical Thumb-->
        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid Name="Grid">
                            <Rectangle Name="Rectangle1" Width="7" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{TemplateBinding Background}" RadiusX="4" RadiusY="4" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--End Vertical Thumb-->

        <!--Start Horizontal Thumb-->
        <Style x:Key="ScrollThumbsHorizontal" TargetType="{x:Type Thumb}">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid Name="Grid">
                            <Rectangle Name="Rectangle1" Width="Auto" Height="7" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{TemplateBinding Background}" RadiusX="4" RadiusY="4" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--End Horizontal Thumb-->

        <!--Start RepeatButton-->
        <Style x:Key="ScrollButtons" TargetType="{x:Type RepeatButton}">
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border CornerRadius="1" Name="Border" Background="{StaticResource TransparentColorBrush}">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" Value="Transparent" TargetName="Border"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#bfbfbf" TargetName="Border"/>                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="#bfbfbf" TargetName="Border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--End RepeatButton-->

        <!--Start Vertical Scrolbar track-->
        <Style x:Key="MyScrollBar" TargetType="{x:Type ScrollBar}">
            <Setter Property="Background" Value="{StaticResource ScrollBarTrackColorBrush}" />
            <Setter Property="Width" Value="10" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidth}}" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="18" />
                                <RowDefinition Height="0.00001*" />
                                <RowDefinition MaxHeight="18" />
                            </Grid.RowDefinitions>
                            <RepeatButton x:Name="DecreaseRepeat" Command="ScrollBar.LineUpCommand" Foreground="{StaticResource StandardBrush}" Style="{DynamicResource ScrollButtons}">
                                <Path x:Name="DecreaseArrow" HorizontalAlignment="Center" VerticalAlignment="Center" Data="F1 M 3.5,0L 0,7L 7,7L 3.5,0 Z " Fill="{StaticResource StandardBrush}" />
                            </RepeatButton>
                            <Track x:Name="PART_Track" Grid.Row="1" Focusable="false" IsDirectionReversed="true">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="{DynamicResource ButtonDefaultBrush}" Style="{DynamicResource ScrollThumbs}" />
                                </Track.Thumb>
                            </Track>
                            <RepeatButton x:Name="IncreaseRepeat" Grid.Row="2" Command="ScrollBar.LineDownCommand" Foreground="{DynamicResource StandardBrush}" Style="{DynamicResource ScrollButtons}">
                                <Path x:Name="IncreaseArrow" HorizontalAlignment="Center" VerticalAlignment="Center" Data="F1 M 3.5,7L 7,0L 0,0L 3.5,7 Z" Fill="{StaticResource StandardBrush}" />
                            </RepeatButton>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--End Vertical Scrolbar track-->

        <!--Start Horizontal Scrolbar track-->
        <Style x:Key="MyScrollBar1" TargetType="{x:Type ScrollBar}">
            <Setter Property="Background" Value="{StaticResource ScrollBarTrackColorBrush}" />
            <Setter Property="Width" Value="Auto" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot"
		   Width="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeight}}"
			Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MaxWidth="18"/>
                                <ColumnDefinition Width="0.00001*"/>
                                <ColumnDefinition MaxWidth="18"/>
                            </Grid.ColumnDefinitions>
                            <RepeatButton x:Name="DecreaseRepeat" Grid.Column="0"
			Command="ScrollBar.LineLeftCommand"
			Foreground="{StaticResource StandardBrush}"
			Style="{DynamicResource ScrollButtons}">
                                <!--<Path Width="33" Height="37" Stretch="Fill" Stroke="Black" Fill="Black" Data="F1 M 319.344,237.333L 287.328,218.849L 287.328,255.818L 319.344,237.333 Z "/>-->
                                <Polygon x:Name="DecreaseArrow" HorizontalAlignment="Center"
					VerticalAlignment="Center" Points="4,0 0,3, 4,6" Stroke="{StaticResource StandardBrush}" Fill="{StaticResource StandardBrush}" />

                                <!--<Path x:Name="DecreaseArrow"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Data="F1 M 3.5,0L 0,7L 7,7L 3.5,0 Z "
					Fill="{StaticResource StandardBrush}" />-->
                            </RepeatButton>
                            <Track x:Name="PART_Track"
		Grid.Column="1"
			Focusable="false"
			IsDirectionReversed="False">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb"
					Background="{DynamicResource ButtonDefaultBrush}"
					Style="{DynamicResource ScrollThumbsHorizontal}" />
                                </Track.Thumb>
                            </Track>
                            <RepeatButton x:Name="IncreaseRepeat"
			Grid.Column="2"
			Command="ScrollBar.LineRightCommand"
			Foreground="{DynamicResource StandardBrush}"
			Style="{DynamicResource ScrollButtons}">

                                <Polygon x:Name="IncreaseArrow"
					HorizontalAlignment="Center"
					VerticalAlignment="Center" Points="0,0 4,3, 0,6" Stroke="{StaticResource StandardBrush}" Fill="{StaticResource StandardBrush}" />
                                <!--<Path x:Name="IncreaseArrow"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Data="F1 M 3.5,7L 7,0L 0,0L 3.5,7 Z "
					Fill="{StaticResource StandardBrush}" />-->
                            </RepeatButton>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--End Horizontal Scrolbar track-->


        <!--Start Phonebook Scrolviewer-->
        <ControlTemplate x:Key="ScrollViewerControlTemplate1" TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                <ScrollBar  Style="{DynamicResource MyScrollBar}" x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Width="10" ViewportSize="{TemplateBinding ViewportWidth}"/>
            </Grid>
        </ControlTemplate>
        <!--End Phonebook Scrollviewer-->


        <!--Start DataGrid-->
        <Style TargetType="DataGrid">
            <Setter Property="CanUserResizeRows" Value="False"></Setter>
            <Setter Property="CanUserResizeColumns" Value="False"></Setter>
            <Setter Property="CanUserReorderColumns" Value="False"></Setter>
            <Setter Property="Background" Value="White"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="IsReadOnly" Value="True"></Setter>
            <Setter Property="SelectionMode" Value="Single"></Setter>
            <Setter Property="AlternatingRowBackground" Value="{StaticResource AlternativeGridRowColorBrush}"/>
            <Setter Property="SelectionUnit" Value="FullRow"></Setter>
            <Setter Property="RowHeight" Value="40"></Setter>
            <Setter Property="GridLinesVisibility" Value="None"></Setter>
            <Setter Property="AutoGenerateColumns" Value="False"></Setter>
            <!--height and width of the data grid-->
            <Setter Property="Width" Value="355"></Setter>
            <Setter Property="Height" Value="350"></Setter>



            <!--disable selection-->
            <!--<Setter Property="IsEnabled" Value="False"></Setter>-->

            <!--<Setter Property="RowBackground" Value="#badeee"/>-->

            <!--hide the selection area of row-->
            <Setter Property="HeadersVisibility" Value="Column"></Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border Background="{TemplateBinding Background}"
					        BorderBrush="{TemplateBinding BorderBrush}"
					        BorderThickness="0"
					        CornerRadius="0"
                                Margin="0"
					        Padding="{TemplateBinding Padding}"
					        SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Button Width="{Binding CellsPanelHorizontalOffset,
										                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
										        Command="{x:Static DataGrid.SelectAllCommand}"
										        Focusable="false"
										        Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,
										                                                      TypeInTargetAssembly={x:Type DataGrid}}}"
										        Visibility="{Binding HeadersVisibility,
										                             ConverterParameter={x:Static DataGridHeadersVisibility.All},
										                             Converter={x:Static DataGrid.HeadersVisibilityConverter},
										                             RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                            <!--header column adjustment to fill up the upper right corner set colspan 2 -->
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
										                                Grid.Column="1"
                                                                            HorizontalAlignment="Stretch"
                                                                            Grid.ColumnSpan="2"
										                                Visibility="{Binding HeadersVisibility,
										                                                     ConverterParameter={x:Static DataGridHeadersVisibility.Column},
										                                                     Converter={x:Static DataGrid.HeadersVisibilityConverter},
										                                                     RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                            <!-- Grid.Row="1" Grid.ColumnSpan="2"-->
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
										                       Grid.Row="1"
										                        Grid.ColumnSpan="3"
										                        CanContentScroll="{TemplateBinding CanContentScroll}" />
                                            <!--Grid.Row="1" Grid.Column="2"-->
                                            <ScrollBar x:Name="PART_VerticalScrollBar"
										           Grid.Row="1"
										           Grid.Column="2"
                                                   Grid.RowSpan="3"
                                                      
										           Maximum="{TemplateBinding ScrollableHeight}"
										           Orientation="Vertical"
										           Style="{DynamicResource MyScrollBar}"
										           ViewportSize="{TemplateBinding ViewportHeight}"
										           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
										           Value="{Binding VerticalOffset,
										                           Mode=OneWay,
										                           RelativeSource={RelativeSource TemplatedParent}}" />
                                            <Grid Grid.Row="2" Grid.Column="1">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar"
											           Grid.Column="1"
                                                       Style="{DynamicResource MyScrollBar1}"
											           Maximum="{TemplateBinding ScrollableWidth}"
											           Orientation="Horizontal"
											           ViewportSize="{TemplateBinding ViewportWidth}"
											           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
											           Value="{Binding HorizontalOffset,
											                           Mode=OneWay,
											                           RelativeSource={RelativeSource TemplatedParent}}" />
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>

                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsGrouping" Value="True">
                    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                </Trigger>
            </Style.Triggers>

        </Style>
        <!--End DataGrid-->

        <!--Start DataGridColumnHeader-->
        <Style x:Key="DataGridColumnHeader1" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Height" Value="35" />
            <Setter Property="SeparatorBrush" Value="DarkRed" />
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="{StaticResource DataGridColumnHeaderColorBrush}"></Setter>
            <Setter Property="Height" Value="40"></Setter>
            <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid  Background ="{StaticResource DataGridColumnHeaderColorBrush}">
                            <Border x:Name="columnHeaderBorder" BorderThickness="1" Padding="10,0,10,0" Background ="{StaticResource DataGridColumnHeaderColorBrush}" Height="100" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <StackPanel Orientation="Horizontal">
                                    <DockPanel  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 0 1 0">
                                        <StackPanel>
                                            <Path x:Name="DecreaseSortingArrow"
                                                  Grid.Row="0"
                                                  Grid.Column="0"
                                                  Stretch="Fill"
                                                  Width="8"
                                                  Height="6"
                                                  Visibility="Visible"
                                                  Data="F1 M 3.5,0L 0,7L 7,7L 3.5,0 Z "
                                                  Fill="{StaticResource GridSortingArrowColorBrush}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  />

                                            <Path x:Name="IncreaseSortingArrow"
                                                  Margin="0 1 0 0"
                                                  Fill="{StaticResource GridSortingArrowColorBrush}"
                                                  Grid.Row="1"
                                                  Grid.Column="0"
                                                  Stretch="Fill"
                                                  Width="8"
                                                  Height="6"
                                                  Visibility="Visible"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Data="F1 M 3.5,7L 7,0L 0,0L 3.5,7 Z"
                                                  />
                                        </StackPanel>
                                    </DockPanel>

                                    <!--<Grid Background="Yellow">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="7"/>
                                            <RowDefinition Height="7"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="10"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <Path x:Name="DecreaseSortingArrow"
                                              Grid.Row="0"
                                              Grid.Column="0"
                                              Stretch="Fill"
                                              Width="8"
                                              Height="6"
                                              Visibility="Visible"
                                              Data="F1 M 3.5,0L 0,7L 7,7L 3.5,0 Z "
                                              Fill="black"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              />

                                        <Path x:Name="IncreaseSortingArrow"
                                              Grid.Row="1"
                                              Grid.Column="0"
                                              Stretch="Fill"
                                              Width="8"
                                              Height="6"
                                              Visibility="Visible"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Data="F1 M 3.5,7L 7,0L 0,0L 3.5,7 Z "
                                              Fill="Red" />

                                    </Grid>-->

                                    <!--Data Grid Sort Arrow-->
                                    <!--<Path x:Name="SortArrow"
                                          Visibility="Visible"
                                          Data="M0,0 L1,0 0.5,1 z"
                                          Stretch="Fill"
                                          Width="8"
                                          Height="6"
                                          Fill="#9b9898"
                                          Margin="0,5,3,0"
                                          RenderTransformOrigin="0.5,0.4"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>-->
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    </ContentPresenter>

                                </StackPanel>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="SortDirection" Value="Descending">
                                <Setter TargetName="DecreaseSortingArrow" Property="Fill" Value="{StaticResource GridSortingArrowActiveColorBrush}" />
                            </Trigger>
                            <Trigger Property="SortDirection" Value="Ascending">
                                <Setter TargetName="IncreaseSortingArrow" Property="Fill" Value="{StaticResource GridSortingArrowActiveColorBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Height" Value="35" />
            <Setter Property="SeparatorBrush" Value="DarkRed" />
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="{StaticResource DataGridColumnHeaderColorBrush}"></Setter>
            <Setter Property="Height" Value="40"></Setter>
            <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid  Background ="{StaticResource DataGridColumnHeaderColorBrush}">
                            <Border x:Name="columnHeaderBorder" BorderThickness="1" Padding="10,0,10,0" Background ="{StaticResource DataGridColumnHeaderColorBrush}" Height="100"  VerticalAlignment="Center">
                                <StackPanel Orientation="Horizontal">
                                    <DockPanel  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 0 1 0">
                                        <StackPanel>
                                            <Path x:Name="DecreaseSortingArrow"
                                                  Grid.Row="0"
                                                  Grid.Column="0"
                                                  Stretch="Fill"
                                                  Width="8"
                                                  Height="6"
                                                  Visibility="Visible"
                                                  Data="F1 M 3.5,0L 0,7L 7,7L 3.5,0 Z "
                                                  Fill="{StaticResource GridSortingArrowColorBrush}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  />

                                            <Path x:Name="IncreaseSortingArrow"
                                                  Margin="0 1 0 0"
                                                  Fill="{StaticResource GridSortingArrowColorBrush}"
                                                  Grid.Row="1"
                                                  Grid.Column="0"
                                                  Stretch="Fill"
                                                  Width="8"
                                                  Height="6"
                                                  Visibility="Visible"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Data="F1 M 3.5,7L 7,0L 0,0L 3.5,7 Z"
                                                  />
                                        </StackPanel>
                                    </DockPanel>

                                    <!--<Grid Background="Yellow">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="7"/>
                                            <RowDefinition Height="7"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="10"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <Path x:Name="DecreaseSortingArrow"
                                              Grid.Row="0"
                                              Grid.Column="0"
                                              Stretch="Fill"
                                              Width="8"
                                              Height="6"
                                              Visibility="Visible"
                                              Data="F1 M 3.5,0L 0,7L 7,7L 3.5,0 Z "
                                              Fill="black"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              />

                                        <Path x:Name="IncreaseSortingArrow"
                                              Grid.Row="1"
                                              Grid.Column="0"
                                              Stretch="Fill"
                                              Width="8"
                                              Height="6"
                                              Visibility="Visible"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Data="F1 M 3.5,7L 7,0L 0,0L 3.5,7 Z "
                                              Fill="Red" />

                                    </Grid>-->

                                    <!--Data Grid Sort Arrow-->
                                    <!--<Path x:Name="SortArrow"
                                          Visibility="Visible"
                                          Data="M0,0 L1,0 0.5,1 z"
                                          Stretch="Fill"
                                          Width="8"
                                          Height="6"
                                          Fill="#9b9898"
                                          Margin="0,5,3,0"
                                          RenderTransformOrigin="0.5,0.4"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>-->
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    </ContentPresenter>

                                </StackPanel>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="SortDirection" Value="Descending">
                                <Setter TargetName="DecreaseSortingArrow" Property="Fill" Value="{StaticResource GridSortingArrowActiveColorBrush}" />
                            </Trigger>
                            <Trigger Property="SortDirection" Value="Ascending">
                                <Setter TargetName="IncreaseSortingArrow" Property="Fill" Value="{StaticResource GridSortingArrowActiveColorBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--End DataGridColumnHeader-->

        <!-- Start TeamPerformance-->
        <Style x:Key="btnTeamPerformance" TargetType="Button">
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="2">
                            <ContentPresenter ContentSource="Content"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value=".8"></Setter>
                                <Setter Property="FontWeight" Value="DemiBold"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- End TeamPerformance-->

        <!-- Start DropDown TeamPerformance-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <ControlTemplate x:Key="ComboBoxToggleButtonTeam" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="2"
                  Background="White"
                  BorderBrush="{StaticResource BorderColorBrush}"
                  BorderThickness="1 1 1 1" Height="Auto" />
                <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  BorderThickness="0,0,1,0" />
                <Path Grid.Column="1" x:Name="Arrow" VerticalAlignment="Center"  HorizontalAlignment="Center" Stroke="{StaticResource ForegroundPhonebookColorBrush}" StrokeThickness="2" Fill="{StaticResource ForegroundPhonebookColorBrush}" Data="M 0 0 L 4 4 L 8 0 Z" Margin="2 2 2 0"/>

                <!--<Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />-->
            </Grid>
            <!--<ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="Green" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="Yellow" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                    <Setter Property="Foreground" Value="#888888"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
                </Trigger>
            </ControlTemplate.Triggers>-->
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBoxTeam" TargetType="{x:Type TextBox}">
            <Border  x:Name="PART_ContentHost" Focusable="False" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                                Cursor="Hand"
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButtonTeam}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBoxTeam}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="White"
                            Visibility="Hidden"
                                     Foreground="{StaticResource ForegroundPhonebookColorBrush}"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <!--<Border>
                                <StackPanel>-->
                            <Popup  
                                    
                                    Margin="0 20 0 0"
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">
                                <!--<Border CornerRadius="2 0 2 2" Background="Yellow" BorderBrush="#FF97A0A5" BorderThickness="1 0 1 1">-->
                                <Grid Name="DropDown"
                                         
                                          SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                x:Name="DropDownBorder"
                                Background="White"
                                            CornerRadius="2 0 2 2"
                                BorderThickness="1 0 1 1"
                                                  BorderBrush="#FF97A0A5"/>
                                    <ScrollViewer Margin="4,10,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                                <!--</Border>-->



                            </Popup>

                            <!--</StackPanel>
                            </Border>-->

                        </Grid>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>-->
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <!--<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>-->
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Cursor" Value="Hand"></Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="5"
                                CornerRadius="3"
                              SnapsToDevicePixels="true">
                            <DockPanel>
                                <ContentPresenter />
                                <Path  Data="M 0,100  Q 35,140  54,190 Q 100,45  168,0 S 90,40  50,150 Q 40,136 0,100 Z "
                               Fill="{StaticResource GridSortingArrowActiveColorBrush}" 
                               Stretch="Fill"
                               VerticalAlignment="Bottom"
                               HorizontalAlignment="Right"
                               Height="15"
                               Width="15"
                                       Visibility="Collapsed"
                                       Name="Arrow1"
                               />
                            </DockPanel>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource AlternativeGridRowColorBrush}"/>
                                <Setter TargetName="Arrow1" Property="Visibility" Value="Visible"></Setter>
                            </Trigger>
                            <Trigger Property="ComboBoxItem.IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource AlternativeGridRowColorBrush}" />
                            </Trigger>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource AlternativeGridRowColorBrush}"/>
                                <Setter Property="Foreground" Value="Black"></Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--End DropDwon Team Performance-->


        <!--<Style TargetType="{x:Type ToolTip}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="HasDropShadow" Value="True"/>
            <Setter Property="Placement" Value="Center" />
            -->
        <!--Offset to the arrow path-->
        <!--
            <Setter Property="HorizontalOffset" Value="15"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToolTip}">
                        <StackPanel >
                            <Border x:Name="border" CornerRadius="3" HorizontalAlignment="Center" VerticalAlignment="Top" Padding="10,7" BorderThickness="0" Background="#e5323232">
                                <StackPanel>
                                    <TextBlock FontFamily="Arial" FontSize="12" Text="{TemplateBinding Content}" Foreground="#f0f0f0" />
                                </StackPanel>
                            </Border>
                            <Path Margin="10,0,0,0" Fill="#e5323232" Data="M 0 0 L 6 6 L 12 0 Z" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                            -->
        <!--Dummy rectangle same height as tool tip, so it centers on the control-->
        <!--
                            <Rectangle Height="{Binding ActualHeight, ElementName=border}" />
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->




        <Style x:Key="btnpad" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter ContentSource="Content"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="callbtn" TargetType="Button">
            <Setter Property="Background" Value="#EEEEEE"/>
            <Setter Property="Foreground" Value="#9D9D9D"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5" BorderThickness="1" BorderBrush="#9D9D9D" HorizontalAlignment="Center">
                            <ContentPresenter ContentSource="Content"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="callvariable" TargetType="Button">
            <Setter Property="Background" Value="#9D9D9D"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter ContentSource="Content"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<Style x:Key="uzairTemp" TargetType="{x:Type Button}">
            -->
        <!---->
        <!--
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />

            <Setter Property="Height" Value="200"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="Foreground" Value="Silver"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="BorderBrush" Value="Silver"/>
            <Setter Property="BorderThickness" Value="55"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="Aqua" BorderThickness="2">
                            <Grid>
                                <Ellipse Fill="{TemplateBinding Background}"/>
                                <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                
                            </Grid>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->


        <!--visual focus rectangle-->
        <!--<Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle StrokeDashArray="1 2" StrokeThickness="0" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" Margin="2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->


        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#DD9322" Offset="0.0"/>
            <GradientStop Color="#DD9322" Offset="1.0"/>
        </LinearGradientBrush>
        <!--border color-->
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="Transparent"/>

        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#DD9322"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="#DD9322"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#9D9D9D"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#DD9322" Offset="0.0"/>
            <GradientStop Color="#DD9322" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#DD9322"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#DD9322" Offset="0.0"/>
            <GradientStop Color="#DD9322" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#DD9322" Offset="0.0"/>
            <GradientStop Color="#DD9322" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <!--border Radius -->
                        <Border CornerRadius="5"  x:Name="templateRoot" SnapsToDevicePixels="true" Background="{StaticResource ComboBox.Static.Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ComboBox.Static.Border}">
                            <Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
                                <Path x:Name="arrow" VerticalAlignment="Center"  HorizontalAlignment="Center" Stroke="White" StrokeThickness="2" Fill="White" Data="M 0 0 L 4 4 L 8 0 Z" Margin="2 2 2 0"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="#9D9D9D"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="10 0 0 0"></Setter>
            <!--<Setter Property="FontWeight" Value="UltraBold"></Setter>-->
            <Setter Property="Template">
                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border>
                            <!--<ScrollViewer x:Name="PART_ContentHost"/>-->
                            <ScrollViewer x:Name="PART_ContentHost"   Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                    </ControlTemplate>
                    <!--<ScrollViewer x:Name="PART_ContentHost"   Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>-->

                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border CornerRadius="5" BorderThickness="1"  x:Name="border"  Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="#9D9D9D"/>
            <!-- Text Color-->
            <Setter Property="Foreground" Value="White"/>
            <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>-->
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Margin="0">
        <UniformGrid Rows="1" Columns="2" Margin="5,0">
            <FrameworkElement x:Name="c1"/>
        </UniformGrid>
        <TabControl BorderThickness="0">
            <TabControl.Resources>
                
                <Style TargetType="TabControl">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabControl">
                                <Grid KeyboardNavigation.TabNavigation="Local">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <TabPanel x:Name="HeaderPanel" Grid.Row="0" IsItemsHost="True" KeyboardNavigation.TabIndex="1"/>
                                    <Border x:Name="Border" Grid.Row="1" BorderThickness="0">
                                        <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" />
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style TargetType="TabItem">
                    <!--<Setter Property="Cursor" Value="Hand"></Setter>-->
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <TextBlock FontWeight="Bold" Text="{Binding}" FontSize="13"/>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem">
                                <Grid x:Name="panel">
                                    <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="0,0"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="panel" Property="Background" Value="{StaticResource TabItemActiveColorBrush}" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter TargetName="panel" Property="Background" Value="White" />
                                        <Setter Property="Foreground" Value="{StaticResource TabItemNonActiveForegroundColorBrush}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>

            <TabItem Header="Cisco CTI By Expertflow" Width="{Binding ElementName=c1, Path=ActualWidth}" Height="50" VerticalAlignment="Top">
                <Border BorderBrush="#C8C6C6" BorderThickness="1">
                    <StackPanel>
                        <Border BorderBrush="#C8C6C6" BorderThickness="0 0 0 1" Margin="0 0 0 8" Height="50">
                            <DockPanel LastChildFill="False">
                                <StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
                                    <TextBlock x:Name="txtAgentName" Foreground="#56C3D8" FontSize="15" FontWeight="UltraBold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="7 0 0 0" Text="Agent Name"></TextBlock>
                                    <TextBlock x:Name="txtAgentExtension" Foreground="#9D9D9D" Text="(EXT. 2206)" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="10" Margin="7 2 0 0" FontWeight="Bold"></TextBlock>
                                </StackPanel>
                                <ComboBox  x:Name="cbReasonCodes" Margin="0 0 15 0" DockPanel.Dock="Right" IsEditable="True" IsReadOnly="True" Text="Talking" Style="{DynamicResource ComboBoxStyle1}" HorizontalAlignment="Center" VerticalAlignment="Center"  Grid.Row="0" Grid.Column="1" Width="100" BorderBrush="#EEEEEE">
                                    <ComboBoxItem Content="Ready"></ComboBoxItem>
                                </ComboBox>
                            </DockPanel>
                        </Border>
                        <StackPanel  Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 0 0 8">
                            <Border BorderBrush="#C8C6C6" BorderThickness="1" Margin="0 0 3 0" Padding=" 3 0 3 0">
                                <Button Style="{StaticResource btnpad}" Padding="10" Background="Transparent" FontWeight="UltraBold"  Height="25" Width="25">
                                    <Image Source="/Resources/icon-dialer.png" Height="25" Width="25" />
                                </Button>
                            </Border>
                            <TextBox  x:Name="txtDailNumber" Width="120" Margin="2 0 0 0" BorderBrush="#C8C6C6" BorderThickness="1" Text="1702" VerticalAlignment="Center" Padding="10" FontWeight="Bold"></TextBox>
                        </StackPanel>

                        <Border Padding="8" BorderBrush="#C8C6C6" Background="{StaticResource TabItemActiveColorBrush}" CornerRadius="2"  Margin="10" BorderThickness="1">
                            <StackPanel>
                                <StackPanel Name="SearchStackPanel">
                                    <TextBlock Text="Phonebook" Foreground="#c7c2c2" FontWeight="Bold"></TextBlock>
                                    <Grid  Margin="0 5 0 0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="140"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <StackPanel Grid.Column="0" Grid.Row="0">
                                            <TextBox BorderThickness="0" Style="{StaticResource WaterMarkPhoneSearch}" ></TextBox>

                                        </StackPanel>
                                        <StackPanel Grid.Column="1" Grid.Row="0"  Margin="10 0 0 0">
                                            <ComboBox  Height="28.6"  x:Name="cbReasonCoes1"  IsEditable="True" IsReadOnly="True" Text="Phone Book"  HorizontalAlignment="Stretch" VerticalAlignment="Center">
                                                <ComboBoxItem Content="Item 1"/>
                                                <ComboBoxItem Content="Item 2"/>
                                                <ComboBoxItem Content="Item 3"/>
                                                <ComboBoxItem Content="Item 4"/>
                                                <ComboBoxItem Content="Item 5"/>
                                            </ComboBox>
                                        </StackPanel>

                                    </Grid>
                                </StackPanel>
                                <ScrollViewer Margin="0 10 0 0" Height="400" VerticalScrollBarVisibility="Auto" Template="{DynamicResource ScrollViewerControlTemplate1}">
                                    <StackPanel Name="PhoneBookStackPanel">
                                        <!--<Expander Header="Glenn Helgass">

                                            <TextBlock Text="Under development" FontWeight="ExtraBold" Foreground="Yellow" FontSize="20"></TextBlock>
                                        </Expander>
                                        <Expander Header="Glenn Helgass">

                                            <TextBlock Text="hello expender" FontWeight="SemiBold" Foreground="Yellow"></TextBlock>
                                        </Expander>-->
                                        <!--<Expander Header="Edam Jimes" Foreground="#938c8c" FontWeight="Bold" >

                                            <TextBlock Text="hello expender" FontWeight="SemiBold" Foreground="Yellow"></TextBlock>
                                        </Expander>
                                        <Expander Header="Edam Jimes" Foreground="#938c8c" FontWeight="Bold" >

                                            <TextBlock Text="hello expender" FontWeight="SemiBold" Foreground="Yellow"></TextBlock>
                                        </Expander>
                                        <Expander Header="Edam Jimes" Foreground="#938c8c" FontWeight="Bold" >

                                            <TextBlock Text="hello expender" FontWeight="SemiBold" Foreground="Yellow"></TextBlock>
                                        </Expander>
                                        <Expander Header="Edam Jimes" Foreground="#938c8c" FontWeight="Bold" >

                                            <TextBlock Text="hello expender" FontWeight="SemiBold" Foreground="Yellow"></TextBlock>
                                        </Expander>
                                        <Expander Header="Edam Jimes" Foreground="#938c8c" FontWeight="Bold" >

                                            <TextBlock Text="hello expender" FontWeight="SemiBold" Foreground="Yellow"></TextBlock>
                                        </Expander>
                                        <Expander Header="Edam Jimes" Foreground="#938c8c" FontWeight="Bold" >

                                            <TextBlock Text="hello expender" FontWeight="SemiBold" Foreground="Yellow"></TextBlock>
                                        </Expander>
                                        <Expander Header="Edam Jimes" Foreground="#938c8c" FontWeight="Bold" >

                                            <TextBlock Text="hello expender" FontWeight="SemiBold" Foreground="Yellow"></TextBlock>
                                        </Expander>
                                        <Expander Header="Edam Jimes" Foreground="#938c8c" FontWeight="Bold" >

                                            <TextBlock Text="hello expender" FontWeight="SemiBold" Foreground="Yellow"></TextBlock>
                                        </Expander>

                                        <Expander Header="Edam Jimes" Foreground="#938c8c" FontWeight="Bold" >

                                            <TextBlock Text="hello expender" FontWeight="SemiBold" Foreground="Yellow"></TextBlock>
                                        </Expander>
                                        <Expander Header="Edam Jimes" Foreground="#938c8c" FontWeight="Bold" >

                                            <TextBlock Text="hello expender" FontWeight="SemiBold" Foreground="Yellow"></TextBlock>
                                        </Expander>
                                        <Expander Header="Edam Jimes" Foreground="#938c8c" FontWeight="Bold" >

                                            <TextBlock Text="hello expender" FontWeight="SemiBold" Foreground="Yellow"></TextBlock>
                                        </Expander>
                                        <Expander Margin="0 0 0 10" Header="Edam Jimes" Foreground="#938c8c" FontWeight="Bold" >

                                            <TextBlock Text="hello expender" FontWeight="SemiBold" Foreground="Yellow"></TextBlock>
                                        </Expander>-->
                                    </StackPanel>

                                </ScrollViewer>
                            </StackPanel>
                        </Border>
                        <!--call Panel-->

                        <!--<Border Grid.Row="2" BorderBrush="#C8C6C6" BorderThickness="1" Background="#EEEEEE" Margin="5 10 5 5">
                            <Border BorderBrush="#9D9D9D" BorderThickness="1" Grid.Row="0" Margin="7 7 7 7" CornerRadius="2">
                                <Grid x:Name="toolbox">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="40"></RowDefinition>
                                        <RowDefinition Height="*"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition></ColumnDefinition>
                                        <ColumnDefinition></ColumnDefinition>
                                        <ColumnDefinition></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Grid.Row="0" Grid.Column="0" Margin="7 3 10 0">
                                        <TextBlock x:Name="txtCallTiming" Foreground="#9D9D9D" Text="00:00:00" FontSize="14"></TextBlock>
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="/Resources/3050.png" Height="12" Width="12" Margin="0 0 3 0"/>
                                            <TextBlock FontWeight="Bold" FontFamily="Tahoma"  x:Name="txtCallingNumber" Text="03336301122"></TextBlock>
                                        </StackPanel>

                                    </StackPanel>
                                    <StackPanel Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Vertical" Margin="0 5 0 0">
                                        <Button  x:Name="btnCallVaribles" Style="{StaticResource callbtn}" Width="110" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" Background="#EEEEEE" Click="btnCallVaribles_Click">
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <TextBlock FontFamily="Tahoma"  x:Name="txtlbl" Text="Call Variables" VerticalAlignment="Center" Margin="5 0 8 0"></TextBlock>
                                                <Path x:Name="arrow" VerticalAlignment="Center"  HorizontalAlignment="Right" Stroke="#9D9D9D" StrokeThickness="2" Fill="#9D9D9D" Data="M 0 0 L 4 4 L 8 0 Z" Margin="0 1 8 0"/>
                                                -->
                        <!--<Polygon Points="0,0 8,5, 0,10" Stroke="Black" Fill="Black" />-->
                        <!--<Polygon Points="8,0 0,5, 8,10" Stroke="Black" Fill="Black" />-->
                        <!--
                                            </StackPanel>
                                        </Button>
                                    </StackPanel>

                                    <StackPanel Grid.Row="0" Grid.Column="3"  Margin="0 0 10 0" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                                        <Button Style="{StaticResource callvariable}" x:Name="btnCallPick1" Padding="7" Margin="0 0 2 0" Background="#34BE82" Foreground="White" FontWeight="UltraBold" BorderBrush="Transparent" Width="25" Height="25">
                                            <Image Source="/Resources/call-answer-1.png" />
                                        </Button>
                                        <Button Style="{StaticResource callvariable}" x:Name="btnCallDrop1"  Padding="7" Margin="2 0 2 0" Background="#B91646" Foreground="White" FontWeight="UltraBold" Width="25" Height="25">
                                            <Image Source="/Resources/call-conference.png" />
                                        </Button>
                                        <Button Style="{StaticResource callvariable}" x:Name="btnCallEnd1"  Padding="7" Margin="2 0 2 0" Background="#B91646" Foreground="White" FontWeight="UltraBold"  Width="25" Height="25">
                                            <Image Source="/Resources/call-end.png" />
                                        </Button>
                                    </StackPanel>
                                    <Border Padding="15 12 15 12" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Background="#e5e3e3" Margin="7 7 7 20" BorderBrush="#9D9D9D" BorderThickness="1" x:Name="CallVariablePanel" Visibility="Collapsed">
                                        <Grid x:Name="tempgrid">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition></ColumnDefinition>
                                                <ColumnDefinition></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <StackPanel Grid.Row="0" Grid.Column="0">
                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 1" Margin="0 0 0 7"></TextBlock>
                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 2" Margin="0 0 0 7"></TextBlock>
                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 3" Margin="0 0 0 7"></TextBlock>
                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 4" Margin="0 0 0 7"></TextBlock>
                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 5" Margin="0 0 0 7"></TextBlock>
                                            </StackPanel>
                                            <StackPanel Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right">
                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 6" Margin="0 0 0 7"></TextBlock>
                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 7" Margin="0 0 0 7"></TextBlock>
                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 8" Margin="0 0 0 7"></TextBlock>
                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 9" Margin="0 0 0 7"></TextBlock>
                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 10" Margin="0 0 0 7"></TextBlock>
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Border>
                        </Border>-->
                        <!-- end call Panel-->
                    </StackPanel>
                </Border>


            </TabItem>
            <TabItem Header="Supervisor Dashboard" Width="{Binding ElementName=c1, Path=ActualWidth}">
                <Border BorderBrush="{StaticResource TransparentColorBrush}" BorderThickness="0">
                    <StackPanel>
                        <UniformGrid Rows="1" Columns="2" Margin="5 0,5,0">
                            <FrameworkElement x:Name="c11"/>
                        </UniformGrid>
                        <TabControl  BorderThickness="0" Margin="1 0">
                            <TabControl.Resources>
                                <Style TargetType="TabItem">

                                    <Setter Property="HeaderTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <TextBlock FontWeight="Bold" Text="{Binding}" FontSize="13"/>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="TabItem">
                                                <Border Name="Border" BorderBrush="{StaticResource TransparentColorBrush}" BorderThickness="0">
                                                    <Grid x:Name="panel">
                                                        <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="0,0"/>
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter TargetName="panel" Property="Background" Value="White" />
                                                    </Trigger>
                                                    <Trigger Property="IsSelected" Value="False">
                                                        <Setter TargetName="panel" Property="Background" Value="{StaticResource TabItemActiveColorBrush}" />
                                                        <Setter Property="Foreground" Value="{StaticResource TabItemNonActiveForegroundColorBrush}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TabControl.Resources>
                            <TabItem Header="Queue Stats" Width="{Binding ElementName=c11, Path=ActualWidth}" Height="50">
                                <Border BorderBrush="#C8C6C6" BorderThickness="1">
                                    <StackPanel HorizontalAlignment="Stretch">
                                        <DataGrid  Name="dgSimple1" VerticalAlignment="Center" VerticalContentAlignment="Center" CellStyle="{StaticResource Body_Content_DataGrid_Centering}" Height="350" EnableRowVirtualization="False">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="Queue Name" Binding="{Binding QueueName}" IsReadOnly="True">
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Header="Queued Calls" Binding="{Binding QueuedCalls}" IsReadOnly="True" HeaderStyle="{StaticResource DataGridColumnHeader1}">
                                                    <DataGridTextColumn.ElementStyle>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                                        </Style>
                                                    </DataGridTextColumn.ElementStyle>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Header="Max Time" Binding="{Binding MaxTime}" IsReadOnly="True" HeaderStyle="{StaticResource DataGridColumnHeader1}">
                                                    <DataGridTextColumn.ElementStyle>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                                        </Style>
                                                    </DataGridTextColumn.ElementStyle>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Header="Ready" Binding="{Binding Ready}" IsReadOnly="True" HeaderStyle="{StaticResource DataGridColumnHeader1}">
                                                    <DataGridTextColumn.ElementStyle>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                                        </Style>
                                                    </DataGridTextColumn.ElementStyle>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Header="Not Ready" Binding="{Binding NotReady}" IsReadOnly="True" HeaderStyle="{StaticResource DataGridColumnHeader1}">
                                                    <DataGridTextColumn.ElementStyle>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                                        </Style>
                                                    </DataGridTextColumn.ElementStyle>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Header="Talking-IN" Binding="{Binding TalkingIN}" IsReadOnly="True" HeaderStyle="{StaticResource DataGridColumnHeader1}">
                                                    <DataGridTextColumn.ElementStyle>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                                        </Style>
                                                    </DataGridTextColumn.ElementStyle>
                                                </DataGridTextColumn>

                                                <DataGridTextColumn Header="Talking-OUT" Binding="{Binding TalkingOUT}" IsReadOnly="True" HeaderStyle="{StaticResource DataGridColumnHeader1}">
                                                    <DataGridTextColumn.ElementStyle>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                                        </Style>
                                                    </DataGridTextColumn.ElementStyle>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Header="Talking INT" Binding="{Binding TalkingINT}" IsReadOnly="True" HeaderStyle="{StaticResource DataGridColumnHeader1}">
                                                    <DataGridTextColumn.ElementStyle>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                                        </Style>
                                                    </DataGridTextColumn.ElementStyle>
                                                </DataGridTextColumn>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </StackPanel>
                                </Border>
                            </TabItem>

                            <!--Start Team Performance Tab-->
                            <TabItem Header="Team Performance" Width="{Binding ElementName=c11, Path=ActualWidth}" Height="50">
                                <StackPanel HorizontalAlignment="Stretch" >
                                    <Grid Background="#F7F7F7">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="40"></RowDefinition>
                                            <RowDefinition Height="30"></RowDefinition>
                                            <RowDefinition Height="30"></RowDefinition>
                                            <RowDefinition Height="*"></RowDefinition>

                                            <RowDefinition Height="*"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Center" Orientation="Vertical"  Width="306">
                                            <ComboBox Height="28.5"  x:Name="cbReasonCodes1" DockPanel.Dock="Right" IsEditable="True" IsReadOnly="True" Text="MEDICARE TEAM"  HorizontalAlignment="Stretch" VerticalAlignment="Center"  BorderBrush="#EEEEEE">
                                                <ComboBoxItem Content="Team 1"/>
                                                <ComboBoxItem Content="Team 2"/>
                                                <ComboBoxItem Content="Team 3"/>
                                                <ComboBoxItem Content="Team 4"/>
                                                <ComboBoxItem Content="Team 5"/>
                                            </ComboBox>
                                        </StackPanel>
                                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Width="Auto"   Grid.Row="1"    VerticalAlignment="Center">
                                            <Button Style="{StaticResource btnTeamPerformance}" Width="100" Height="25"  Margin="0 0 0 3" Background="White" BorderBrush="#A7A5A5" BorderThickness="1">
                                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="Stop Monitoring" Padding="10 2 10 2" Foreground="#A7A5A5"></TextBlock>
                                            </Button>
                                            <Button Style="{StaticResource btnTeamPerformance}" Width="100" Height="25"  Margin="3 0 0 0" Background="#CB2424" BorderBrush="#CB2424" BorderThickness="1">
                                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="Not Ready" Padding="10 2 10 2" Foreground="White"></TextBlock>
                                            </Button>
                                            <Button Style="{StaticResource btnTeamPerformance}" Width="100" Height="25" Margin="3 0 0 0" Background="White" BorderBrush="#7be5bd" BorderThickness="1">
                                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="Ready" Padding="10 2 10 2" Foreground="#7be5bd"></TextBlock>
                                            </Button>
                                        </StackPanel>
                                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Width="Auto"  Grid.Row="2"    VerticalAlignment="Center">
                                            <Button Style="{StaticResource btnTeamPerformance}" Width="100" Height="25"  Margin="3 0 0 0" Background="#A7A5A5" BorderThickness="0">
                                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="SignOut" Padding="10 2 10 2" Foreground="White"></TextBlock>
                                            </Button>

                                            <!--<Rectangle VerticalAlignment="Stretch" Width="2" Margin="3 0 0 0" Stroke="#DEDEDE" Fill="#DEDEDE"/>-->

                                            <Button Style="{StaticResource btnTeamPerformance}" Width="100" Height="25" Margin="3 0 0 0" Background="Black" BorderThickness="0">
                                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="Bergeln" Padding="10 2 10 2" Foreground="White"></TextBlock>
                                            </Button>
                                            <Button Style="{StaticResource btnTeamPerformance}" Width="100" Height="25"  Margin="3 0 5 0" Background="White" BorderBrush="#A7A5A5" BorderThickness="1">
                                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="Drop Participant" Padding="10 2 10 2" Foreground="#A7A5A5"></TextBlock>
                                            </Button>
                                        </StackPanel>

                                        <StackPanel Grid.Row="3" HorizontalAlignment="Stretch" Orientation="Vertical"  Width="306">
                                            <TextBox BorderThickness="0" Style="{StaticResource WaterMarkTeamPerformanceSearch}" x:Name="SearchTermTextBox"></TextBox>

                                            <!--<Grid>
                                                <TextBox   VerticalAlignment="Center" HorizontalAlignment="Stretch" x:Name="SearchTermTextBox" Margin="0 5 0 5" Padding="4 0 0 0" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" KeyUp="SearchTermTextBox_KeyDown">
                                                    <TextBox.Resources>
                                                        <Style TargetType="{x:Type Border}">
                                                            <Setter Property="CornerRadius" Value="5"/>
                                                            <Setter Property="Height" Value="25"/>
                                                            <Setter Property="BorderThickness" Value="1"></Setter>
                                                        </Style>
                                                    </TextBox.Resources>
                                                </TextBox>
                                            </Grid>-->
                                        </StackPanel>
                                        <StackPanel Grid.Row="4" HorizontalAlignment="Stretch" Orientation="Vertical"  Width="306">
                                            <Grid>
                                                <TextBox   VerticalAlignment="Center" HorizontalAlignment="Stretch" x:Name="TxtUserInput" Margin="0 5 0 5" Padding="4 0 0 0" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" KeyUp="SearchTermTextBox_KeyDown">
                                                    <TextBox.Resources>
                                                        <Style TargetType="{x:Type Border}">
                                                            <Setter Property="CornerRadius" Value="5"/>
                                                            <Setter Property="Height" Value="25"/>
                                                            <Setter Property="BorderThickness" Value="1"></Setter>
                                                        </Style>
                                                    </TextBox.Resources>
                                                </TextBox>
                                            </Grid>
                                            <Button Style="{StaticResource btnTeamPerformance}" Height="25"  Background="White" BorderBrush="#A7A5A5" BorderThickness="1" Name="btnChangeTimer" Click="btnChangeTimer_Click">
                                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="Change Time" Padding="10 2 10 2" Foreground="#A7A5A5"></TextBlock>
                                            </Button>
                                        </StackPanel>

                                    </Grid>
                                    <StackPanel HorizontalAlignment="Stretch">
                                        <DataGrid Name="dgSimple" VerticalAlignment="Center" VerticalContentAlignment="Center" CellStyle="{StaticResource Body_Content_DataGrid_Centering}" Height="350" EnableRowVirtualization="False">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="Agent Name" Binding="{Binding AgentName}" IsReadOnly="True"  />
                                                <DataGridTemplateColumn  SortMemberPath="CallStatus" CanUserSort="True" Header="Status" CellTemplate="{StaticResource StatusTemplate}">

                                                </DataGridTemplateColumn>
                                                <DataGridTextColumn  Header="Time" Binding="{Binding DisplayTimeString}" IsReadOnly="True">
                                                    <DataGridTextColumn.ElementStyle>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="HorizontalAlignment" Value="Left" />
                                                        </Style>
                                                    </DataGridTextColumn.ElementStyle>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Header="Extension" Binding="{Binding Extension}" IsReadOnly="True" HeaderStyle="{StaticResource DataGridColumnHeader1}">
                                                    <DataGridTextColumn.ElementStyle>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                                        </Style>
                                                    </DataGridTextColumn.ElementStyle>
                                                </DataGridTextColumn>
                                            </DataGrid.Columns>
                                            <DataGrid.RowDetailsTemplate >
                                                <DataTemplate>
                                                    <Border x:Name="RowDetailsContainer" BorderThickness="0" Background="#F7F7F7" Padding="10 10 10 10">
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*"></RowDefinition>
                                                                <RowDefinition Height="*"></RowDefinition>
                                                                <RowDefinition Height="*"></RowDefinition>
                                                            </Grid.RowDefinitions>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="160"></ColumnDefinition>
                                                                <ColumnDefinition Width="160"></ColumnDefinition>
                                                            </Grid.ColumnDefinitions>

                                                            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0">
                                                                <TextBlock FontSize="12" Text="Active Participants : " VerticalAlignment="Center" />
                                                                <TextBlock FontSize="12" Text="{Binding ActiveParticipants}" VerticalAlignment="Center" />
                                                            </StackPanel>
                                                            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="1">
                                                                <TextBlock FontSize="12" Text="Held Participants : " VerticalAlignment="Center" />
                                                                <TextBlock FontSize="12" Text="{Binding HeldParticipants}" VerticalAlignment="Center" />
                                                            </StackPanel>
                                                            <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0">
                                                                <TextBlock FontSize="12" Text="Duration : " VerticalAlignment="Center" />
                                                                <TextBlock FontSize="12" Text="{Binding Duration}" VerticalAlignment="Center" />
                                                            </StackPanel>
                                                            <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="1">
                                                                <TextBlock FontSize="12" Text="Call Status : " VerticalAlignment="Center" />
                                                                <TextBlock FontSize="12" Text="{Binding CallStatus}" VerticalAlignment="Center" />
                                                            </StackPanel>
                                                            <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="0">
                                                                <TextBlock FontSize="12" Text="Queue Name : " VerticalAlignment="Center" />
                                                                <TextBlock FontSize="12" Text="{Binding QueueName}" VerticalAlignment="Center" />
                                                            </StackPanel>
                                                        </Grid>
                                                    </Border>
                                                    <DataTemplate.Triggers>
                                                        <DataTrigger Binding="{Binding isRowDetail}" Value="false">
                                                            <Setter TargetName="RowDetailsContainer" Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </DataTemplate.Triggers>
                                                </DataTemplate>
                                            </DataGrid.RowDetailsTemplate>
                                        </DataGrid>
                                        <StackPanel Visibility="Collapsed"  Name="StackNoData" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 3 5 0">
                                            <TextBlock Text="No Data Found" FontSize="15" FontWeight="DemiBold" Foreground="{StaticResource BackgroundBrush}" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                                        </StackPanel>
                                        <StackPanel Name="StackPagination" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 3 5 0">
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </TabItem>
                            <!--End Team Performance Tab-->
                        </TabControl>
                    </StackPanel>
                </Border>
            </TabItem>
        </TabControl>
    </Grid>
</Window>


<!--
    Queue Name
    Queue Call
    Max Time
    Ready
    Not Ready
    Talking-IN
    Talking-OUT
    Talking INT
    -->