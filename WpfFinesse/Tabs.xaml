<Window x:Class="WpfFinesse.Tabs"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfFinesse"
                xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
        mc:Ignorable="d"
        Title="Tabs" MinWidth="380" MaxWidth="380" MinHeight="500">
    <Window.Resources>
        <Color x:Key="BackgroundColor">#A6A6A6</Color>
        <Color x:Key="StandardColor">#A7A7A7</Color>
        <Color x:Key="HoverColor">#AAC64D45</Color>
        <Color x:Key="PressedColor">#AA0000</Color>
        <Color x:Key="DialogBackgroundColor">#FF666666</Color>
        <Color x:Key="ScollBarBackgroundStart">#77C64D45</Color>
        <Color x:Key="ScollBarBackgroundEnd">#99C64D45</Color>
        <SolidColorBrush x:Key="StandardBrush" Color="{StaticResource StandardColor}" />
        <SolidColorBrush x:Key="HoverBrush" Color="{StaticResource HoverColor}" />
        <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}" />


        <Style x:Key="Body_Content_DataGrid_Centering"
	  TargetType="{x:Type DataGridCell}">
            <Setter Property="VerticalAlignment"
			Value="Center" />
        </Style>




        <!--Start Vertical Thumb-->
        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid Name="Grid">
                            <Rectangle Name="Rectangle1"
						 Width="7"
						 Height="Auto"
						 HorizontalAlignment="Stretch"
						 VerticalAlignment="Stretch"
						 Fill="{TemplateBinding Background}"
						 RadiusX="4"
						 RadiusY="4" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--End Vertical Thumb-->

        <!--Start Horizontal Thumb-->
        <Style x:Key="ScrollThumbsHorizontal" TargetType="{x:Type Thumb}">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid Name="Grid">
                            <Rectangle Name="Rectangle1"
						 Width="Auto"
						 Height="7"
						 HorizontalAlignment="Stretch"
						 VerticalAlignment="Stretch"
						 Fill="{TemplateBinding Background}"
						 RadiusX="4"
						 RadiusY="4" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--End Horizontal Thumb-->


        <!--Start RepeatButton-->
        <Style x:Key="ScrollButtons" TargetType="{x:Type RepeatButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Name="Border" Background="Transparent">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--End RepeatButton-->


        <!--Start Vertical Scrolbar track-->
        <Style x:Key="MyScrollBar" TargetType="{x:Type ScrollBar}">
            <!--<Setter Property="Background" Value="{DynamicResource ScollBarBackgroundBrush}" />-->
            <Setter Property="Background" Value="#DEDEDE" />
            <Setter Property="Width" Value="10" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot"
		   Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidth}}"
			Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="18" />
                                <RowDefinition Height="0.00001*" />
                                <RowDefinition MaxHeight="18" />
                            </Grid.RowDefinitions>
                            <RepeatButton x:Name="DecreaseRepeat"
			Command="ScrollBar.LineUpCommand"
			Foreground="{StaticResource StandardBrush}"
			Style="{DynamicResource ScrollButtons}">
                                <Path x:Name="DecreaseArrow"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Data="F1 M 3.5,0L 0,7L 7,7L 3.5,0 Z "
					Fill="{StaticResource StandardBrush}" />
                            </RepeatButton>
                            <Track x:Name="PART_Track"
			Grid.Row="1"
			Focusable="false"
			IsDirectionReversed="true">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb"
					Background="{DynamicResource ButtonDefaultBrush}"
					Style="{DynamicResource ScrollThumbs}" />
                                </Track.Thumb>
                            </Track>
                            <RepeatButton x:Name="IncreaseRepeat"
			Grid.Row="2"
			Command="ScrollBar.LineDownCommand"
			Foreground="{DynamicResource StandardBrush}"
			Style="{DynamicResource ScrollButtons}">
                                <Path x:Name="IncreaseArrow"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Data="F1 M 3.5,7L 7,0L 0,0L 3.5,7 Z "
					Fill="{StaticResource StandardBrush}" />
                            </RepeatButton>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--End Vertical Scrolbar track-->


        <!--Start Horizontal Scrolbar track-->
        <Style x:Key="MyScrollBar1" TargetType="{x:Type ScrollBar}">
            <!--<Setter Property="Background" Value="{DynamicResource ScollBarBackgroundBrush}" />-->
            <Setter Property="Background" Value="#DEDEDE" />
            <Setter Property="Width" Value="Auto" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot"
		   Width="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeight}}"
			Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MaxWidth="18"/>
                                <ColumnDefinition Width="0.00001*"/>
                                <ColumnDefinition MaxWidth="18"/>
                            </Grid.ColumnDefinitions>
                            <!--<Border Grid.ColumnSpan="3" CornerRadius="2" Background="Red"/>-->
                            <RepeatButton x:Name="DecreaseRepeat" 	Grid.Column="0"
			Command="ScrollBar.LineLeftCommand"
			Foreground="{StaticResource StandardBrush}"
			Style="{DynamicResource ScrollButtons}">
                                <!--<Path Width="33" Height="37" Stretch="Fill" Stroke="Black" Fill="Black" Data="F1 M 319.344,237.333L 287.328,218.849L 287.328,255.818L 319.344,237.333 Z "/>-->
                                <Polygon x:Name="DecreaseArrow" HorizontalAlignment="Center"
					VerticalAlignment="Center" Points="4,0 0,3, 4,6" Stroke="{StaticResource StandardBrush}" Fill="{StaticResource StandardBrush}" />

                                <!--<Path x:Name="DecreaseArrow"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Data="F1 M 3.5,0L 0,7L 7,7L 3.5,0 Z "
					Fill="{StaticResource StandardBrush}" />-->
                            </RepeatButton>
                            <Track x:Name="PART_Track"
		Grid.Column="1"
			Focusable="false"
			IsDirectionReversed="true">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb"
					Background="{DynamicResource ButtonDefaultBrush}"
					Style="{DynamicResource ScrollThumbsHorizontal}" />
                                </Track.Thumb>
                            </Track>
                            <RepeatButton x:Name="IncreaseRepeat"
			Grid.Column="2"
			Command="ScrollBar.LineRightCommand"
			Foreground="{DynamicResource StandardBrush}"
			Style="{DynamicResource ScrollButtons}">

                                <Polygon x:Name="IncreaseArrow"
					HorizontalAlignment="Center"
					VerticalAlignment="Center" Points="0,0 4,3, 0,6" Stroke="{StaticResource StandardBrush}" Fill="{StaticResource StandardBrush}" />
                                <!--<Path x:Name="IncreaseArrow"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Data="F1 M 3.5,7L 7,0L 0,0L 3.5,7 Z "
					Fill="{StaticResource StandardBrush}" />-->
                            </RepeatButton>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--End Horizontal Scrolbar track-->

        <!--Start DataGrid-->
        <Style TargetType="DataGrid">
            <Setter Property="CanUserResizeRows" Value="False"></Setter>
            <Setter Property="Background" Value="White"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="IsReadOnly" Value="True"></Setter>
            <Setter Property="SelectionMode" Value="Single"></Setter>
            <Setter Property="AlternatingRowBackground" Value="#eaeaea"/>
            <Setter Property="SelectionUnit" Value="FullRow"></Setter>
            <Setter Property="RowHeight" Value="40"></Setter>
            <Setter Property="GridLinesVisibility" Value="None"></Setter>
            <Setter Property="AutoGenerateColumns" Value="False"></Setter>
            <!--height and width of the data grid-->
            <Setter Property="Width" Value="355"></Setter>
            <Setter Property="Height" Value="500"></Setter>



            <!--disable selection-->
            <!--<Setter Property="IsEnabled" Value="False"></Setter>-->

            <!--<Setter Property="RowBackground" Value="#badeee"/>-->

            <!--hide the selection area of row-->
            <Setter Property="HeadersVisibility" Value="Column"></Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border Background="{TemplateBinding Background}"
					        BorderBrush="{TemplateBinding BorderBrush}"
					        BorderThickness="0"
					        CornerRadius="0"
                                Margin="0"
					        Padding="{TemplateBinding Padding}"
					        SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Button Width="{Binding CellsPanelHorizontalOffset,
										                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
										        Command="{x:Static DataGrid.SelectAllCommand}"
										        Focusable="false"
										        Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,
										                                                      TypeInTargetAssembly={x:Type DataGrid}}}"
										        Visibility="{Binding HeadersVisibility,
										                             ConverterParameter={x:Static DataGridHeadersVisibility.All},
										                             Converter={x:Static DataGrid.HeadersVisibilityConverter},
										                             RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                            <!--header column adjustment to fill up the upper right corner set colspan 2 -->
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
										                                Grid.Column="1"
                                                                            HorizontalAlignment="Stretch"
                                                                            Grid.ColumnSpan="2"
										                                Visibility="{Binding HeadersVisibility,
										                                                     ConverterParameter={x:Static DataGridHeadersVisibility.Column},
										                                                     Converter={x:Static DataGrid.HeadersVisibilityConverter},
										                                                     RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                            <!-- Grid.Row="1" Grid.ColumnSpan="2"-->
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
										                       Grid.Row="1"
										                        Grid.ColumnSpan="2"
										                        CanContentScroll="{TemplateBinding CanContentScroll}" />
                                            <!--Grid.Row="1" Grid.Column="2"-->
                                            <ScrollBar x:Name="PART_VerticalScrollBar"
										           Grid.Row="1"
										           Grid.Column="2"
                                                   Grid.RowSpan="3"
										           Maximum="{TemplateBinding ScrollableHeight}"
										           Orientation="Vertical"
										           Style="{DynamicResource MyScrollBar}"
										           ViewportSize="{TemplateBinding ViewportHeight}"
										           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
										           Value="{Binding VerticalOffset,
										                           Mode=OneWay,
										                           RelativeSource={RelativeSource TemplatedParent}}" />
                                            <Grid Grid.Row="2" Grid.Column="1">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar"
											           Grid.Column="1"
                                                       Style="{DynamicResource MyScrollBar1}"
											           Maximum="{TemplateBinding ScrollableWidth}"
											           Orientation="Horizontal"
											           ViewportSize="{TemplateBinding ViewportWidth}"
											           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
											           Value="{Binding HorizontalOffset,
											                           Mode=OneWay,
											                           RelativeSource={RelativeSource TemplatedParent}}" />
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>

                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsGrouping" Value="True">
                    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                </Trigger>
            </Style.Triggers>

        </Style>
        <!--End DataGrid-->

        <!--Start DataGridColumnHeader-->
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Height" Value="35" />
            <Setter Property="SeparatorBrush" Value="DarkRed" />
            <Setter Property="FontWeight" Value="Black" />
            <Setter Property="Background" Value="#DEDEDE"></Setter>
            <Setter Property="Height" Value="50"></Setter>
            <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid Background="#DEDEDE">
                            <Border x:Name="columnHeaderBorder" BorderThickness="1" Padding="3,0,3,0" Background="#DEDEDE" Height="100" VerticalAlignment="Center" >
                                <!--<Border.BorderBrush>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="#A5A5A5" />
                                        <GradientStop Offset="1" Color="#4B4B4B" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="#DEB40A" />
                                        <GradientStop Offset="1" Color="#FF7F00" />
                                    </LinearGradientBrush>
                                </Border.Background>-->
                                <StackPanel Orientation="Horizontal">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    </ContentPresenter>

                                    <!--Data Grid Sort Arrow-->
                                    <Path x:Name="SortArrow"
                                          Visibility="Collapsed"
                                          Data="M0,0 L1,0 0.5,1 z"
                                          Stretch="Fill"
                                          Width="8"
                                          Height="6"
                                          Fill="#9b9898"
                                          Margin="3,5,0,0"
                                          RenderTransformOrigin="0.5,0.4"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </StackPanel>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="SortDirection" Value="Ascending">
                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                <Setter TargetName="SortArrow" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="SortDirection" Value="Descending">
                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--End DataGridColumnHeader-->

        <!-- Start TeamPerformance-->
        <Style x:Key="btnTeamPerformance" TargetType="Button">
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="2">
                            <ContentPresenter ContentSource="Content"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value=".8"></Setter>
                                <Setter Property="FontWeight" Value="DemiBold"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- End TeamPerformance-->

        <!-- Start DropDown TeamPerformance-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.BackgroundTeam" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
            <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.BorderTeam" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.BackgroundTeam" Color="#FFFFFFFF"/>
        <!--Border-->
        <SolidColorBrush x:Key="ComboBox.Static.Editable.BorderTeam" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.BackgroundTeam" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.BorderTeam" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.GlyphTeam" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.BackgroundTeam" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.BorderTeam" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.BackgroundTeam" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.BorderTeam" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.BackgroundTeam" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.BorderTeam" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.GlyphTeam" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.BackgroundTeam" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.BorderTeam" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.BackgroundTeam" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.BorderTeam" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.BackgroundTeam" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.BorderTeam" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.GlyphTeam" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.BackgroundTeam" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.BorderTeam" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.BackgroundTeam" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.BorderTeam" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.BackgroundTeam" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.BorderTeam" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.GlyphTeam" Color="#FF606060"/>
        <Style x:Key="ComboBoxToggleButtonTeam" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border CornerRadius="3" x:Name="templateRootTeam" BorderBrush="{StaticResource ComboBox.Static.BorderTeam}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ComboBox.Static.BackgroundTeam}" SnapsToDevicePixels="true">
                            <Border CornerRadius="3" x:Name="splitBorderTeam" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <!--Downword Arrow-->
                                <Path x:Name="arrowTeam" VerticalAlignment="Center"  HorizontalAlignment="Center" Stroke="#9b9898" StrokeThickness="2" Fill="#9b9898" Data="M 0 0 L 4 4 L 8 0 Z" Margin="2 2 2 0"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRootTeam" Value="{StaticResource ComboBox.Static.Editable.BackgroundTeam}"/>
                                <Setter Property="BorderBrush" TargetName="templateRootTeam" Value="{StaticResource ComboBox.Static.Editable.BorderTeam}"/>
                                <Setter Property="Background" TargetName="splitBorderTeam" Value="{StaticResource ComboBox.Static.Editable.Button.BackgroundTeam}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorderTeam" Value="{StaticResource ComboBox.Static.Editable.Button.BorderTeam}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrowTeam" Value="{StaticResource ComboBox.MouseOver.GlyphTeam}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRootTeam" Value="{StaticResource ComboBox.MouseOver.BackgroundTeam}"/>
                                <Setter Property="BorderBrush" TargetName="templateRootTeam" Value="{StaticResource ComboBox.MouseOver.BorderTeam}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRootTeam" Value="{StaticResource ComboBox.MouseOver.Editable.BackgroundTeam}"/>
                                <Setter Property="BorderBrush" TargetName="templateRootTeam" Value="{StaticResource ComboBox.MouseOver.Editable.BorderTeam}"/>
                                <Setter Property="Background" TargetName="splitBorderTeam" Value="{StaticResource ComboBox.MouseOver.Editable.Button.BackgroundTeam}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorderTeam" Value="{StaticResource ComboBox.MouseOver.Editable.Button.BorderTeam}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrowTeam" Value="{StaticResource ComboBox.Pressed.GlyphTeam}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRootTeam" Value="{StaticResource ComboBox.Pressed.BackgroundTeam}"/>
                                <Setter Property="BorderBrush" TargetName="templateRootTeam" Value="{StaticResource ComboBox.Pressed.BorderTeam}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRootTeam" Value="{StaticResource ComboBox.Pressed.Editable.BackgroundTeam}"/>
                                <Setter Property="BorderBrush" TargetName="templateRootTeam" Value="{StaticResource ComboBox.Pressed.Editable.BorderTeam}"/>
                                <Setter Property="Background" TargetName="splitBorderTeam" Value="{StaticResource ComboBox.Pressed.Editable.Button.BackgroundTeam}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorderTeam" Value="{StaticResource ComboBox.Pressed.Editable.Button.BorderTeam}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrowTeam" Value="{StaticResource ComboBox.Disabled.GlyphTeam}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRootTeam" Value="{StaticResource ComboBox.Disabled.BackgroundTeam}"/>
                                <Setter Property="BorderBrush" TargetName="templateRootTeam" Value="{StaticResource ComboBox.Disabled.BorderTeam}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRootTeam" Value="{StaticResource ComboBox.Disabled.Editable.BackgroundTeam}"/>
                                <Setter Property="BorderBrush" TargetName="templateRootTeam" Value="{StaticResource ComboBox.Disabled.Editable.BorderTeam}"/>
                                <Setter Property="Background" TargetName="splitBorderTeam" Value="{StaticResource ComboBox.Disabled.Editable.Button.BackgroundTeam}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorderTeam" Value="{StaticResource ComboBox.Disabled.Editable.Button.BorderTeam}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplatTeam" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButtonTeam}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.BackgroTeam" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBoxTeam" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplateTeam" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButtonTeam}"/>
                <Border x:Name="border" Background="{StaticResource TextBox.Static.BackgroTeam}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBoxTeam}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyleTeamPerformance" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.BackgroundTeam}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.BorderTeam}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplatTeam}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplateTeam}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--End DropDwon Team Performance-->


        <!--<Style TargetType="{x:Type ToolTip}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="HasDropShadow" Value="True"/>
            <Setter Property="Placement" Value="Center" />
            -->
        <!--Offset to the arrow path-->
        <!--
            <Setter Property="HorizontalOffset" Value="15"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToolTip}">
                        <StackPanel >
                            <Border x:Name="border" CornerRadius="3" HorizontalAlignment="Center" VerticalAlignment="Top" Padding="10,7" BorderThickness="0" Background="#e5323232">
                                <StackPanel>
                                    <TextBlock FontFamily="Arial" FontSize="12" Text="{TemplateBinding Content}" Foreground="#f0f0f0" />
                                </StackPanel>
                            </Border>
                            <Path Margin="10,0,0,0" Fill="#e5323232" Data="M 0 0 L 6 6 L 12 0 Z" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                            -->
        <!--Dummy rectangle same height as tool tip, so it centers on the control-->
        <!--
                            <Rectangle Height="{Binding ActualHeight, ElementName=border}" />
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->




        <Style x:Key="btnpad" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter ContentSource="Content"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<Style x:Key="uzair" TargetType="Button">
            <Setter Property="FontSize" Value="30"></Setter>
        </Style>-->
        <!---->
        <Style x:Key="callbtn" TargetType="Button">
            <Setter Property="Background" Value="#EEEEEE"/>
            <Setter Property="Foreground" Value="#9D9D9D"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5" BorderThickness="1" BorderBrush="#9D9D9D" HorizontalAlignment="Center">
                            <ContentPresenter ContentSource="Content"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="callvariable" TargetType="Button">
            <Setter Property="Background" Value="#9D9D9D"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter ContentSource="Content"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<Style x:Key="uzairTemp" TargetType="{x:Type Button}">
            -->
        <!---->
        <!--
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />

            <Setter Property="Height" Value="200"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="Foreground" Value="Silver"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="BorderBrush" Value="Silver"/>
            <Setter Property="BorderThickness" Value="55"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="Aqua" BorderThickness="2">
                            <Grid>
                                <Ellipse Fill="{TemplateBinding Background}"/>
                                <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                
                            </Grid>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->


        <!--visual focus rectangle-->
        <!--<Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle StrokeDashArray="1 2" StrokeThickness="0" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" Margin="2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->


        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#DD9322" Offset="0.0"/>
            <GradientStop Color="#DD9322" Offset="1.0"/>
        </LinearGradientBrush>
        <!--border color-->
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="Transparent"/>

        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#DD9322"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="#DD9322"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#9D9D9D"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#DD9322" Offset="0.0"/>
            <GradientStop Color="#DD9322" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#DD9322"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#DD9322" Offset="0.0"/>
            <GradientStop Color="#DD9322" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#DD9322" Offset="0.0"/>
            <GradientStop Color="#DD9322" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <!--border Radius -->
                        <Border CornerRadius="5"  x:Name="templateRoot" SnapsToDevicePixels="true" Background="{StaticResource ComboBox.Static.Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ComboBox.Static.Border}">
                            <Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
                                <Path x:Name="arrow" VerticalAlignment="Center"  HorizontalAlignment="Center" Stroke="White" StrokeThickness="2" Fill="White" Data="M 0 0 L 4 4 L 8 0 Z" Margin="2 2 2 0"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="#9D9D9D"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="10 0 0 0"></Setter>
            <!--<Setter Property="FontWeight" Value="UltraBold"></Setter>-->
            <Setter Property="Template">
                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border>
                            <!--<ScrollViewer x:Name="PART_ContentHost"/>-->
                            <ScrollViewer x:Name="PART_ContentHost"   Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                    </ControlTemplate>
                    <!--<ScrollViewer x:Name="PART_ContentHost"   Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>-->

                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border CornerRadius="5" BorderThickness="1"  x:Name="border"  Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="#9D9D9D"/>
            <!-- Text Color-->
            <Setter Property="Foreground" Value="White"/>
            <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>-->
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <UniformGrid Rows="1" Columns="2" Margin="5,0">
            <FrameworkElement x:Name="c1"/>
            <!--no need to add the other three-->
        </UniformGrid>
        <TabControl BorderBrush="Transparent" BorderThickness="0">
            <TabControl.Resources>
                <Style TargetType="TabItem">
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <TextBlock FontWeight="Bold" Text="{Binding}" FontSize="13"/>
                            </DataTemplate>

                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem">
                                <Grid x:Name="panel">
                                    <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="panel" Property="Background" Value="#F4F4F4" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter TargetName="panel" Property="Background" Value="White" />
                                        <Setter Property="Foreground" Value="#d3d3d3"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

            </TabControl.Resources>
            <TabItem Header="Cisco CTI By Expertflow" Width="{Binding ElementName=c1, Path=ActualWidth}" Height="50">
                <Border BorderBrush="#C8C6C6" BorderThickness="1">
                    <StackPanel>
                        <Border BorderBrush="#C8C6C6" BorderThickness="0 0 0 1" Margin="0 0 0 8" Height="50">
                            <DockPanel LastChildFill="False">
                                <StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
                                    <TextBlock x:Name="txtAgentName" Foreground="#56C3D8" FontSize="15" FontWeight="UltraBold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="7 0 0 0" Text="Agent Name"></TextBlock>
                                    <TextBlock x:Name="txtAgentExtension" Foreground="#9D9D9D" Text="(EXT. 2206)" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="10" Margin="7 2 0 0" FontWeight="Bold"></TextBlock>
                                </StackPanel>
                                <ComboBox  x:Name="cbReasonCodes" Margin="0 0 15 0" DockPanel.Dock="Right" IsEditable="True" IsReadOnly="True" Text="Talking" Style="{DynamicResource ComboBoxStyle1}" HorizontalAlignment="Center" VerticalAlignment="Center"  Grid.Row="0" Grid.Column="1" Width="100" BorderBrush="#EEEEEE">
                                    <ComboBoxItem Content="Ready"></ComboBoxItem>
                                </ComboBox>
                            </DockPanel>
                        </Border>

                        <StackPanel  Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 0 0 8">
                            <Border BorderBrush="#C8C6C6" BorderThickness="1" Margin="0 0 3 0" Padding=" 3 0 3 0">
                                <Button Style="{StaticResource btnpad}" Padding="10" Background="Transparent" FontWeight="UltraBold"  Height="25" Width="25">
                                    <Image Source="/Resources/icon-dialer.png" Height="25" Width="25" />
                                </Button>
                            </Border>
                            <TextBox  x:Name="txtDailNumber" Width="120" Margin="2 0 0 0" BorderBrush="#C8C6C6" BorderThickness="1" Text="1702" VerticalAlignment="Center" Padding="10" FontWeight="Bold"></TextBox>
                        </StackPanel>



                        <Border BorderBrush="#C8C6C6" BorderThickness="1" Background="#EEEEEE" Margin="5 0 5 0" Name="CallPanel"  Visibility="Visible">
                            <StackPanel>
                                <Border BorderBrush="#9D9D9D" BorderThickness="1" Grid.Row="0" Margin="7 7 7 7" CornerRadius="2">
                                    <Grid x:Name="toolbox">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="40"></RowDefinition>
                                            <RowDefinition Height="*"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition></ColumnDefinition>
                                            <ColumnDefinition></ColumnDefinition>
                                            <ColumnDefinition></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Grid.Row="0" Grid.Column="0" Margin="7 3 10 0" >
                                            <TextBlock x:Name="txtCallTiming" Foreground="#9D9D9D" Text="00:00:05" FontSize="14"></TextBlock>
                                            <StackPanel Orientation="Horizontal">
                                                <Image Source="/Resources/3050.png" Height="12" Width="12" Margin="0 0 3 0"/>
                                                <TextBlock FontWeight="Bold" FontFamily="Tahoma"  x:Name="txtCallingNumber" Text="+923205500003"></TextBlock>
                                            </StackPanel>

                                        </StackPanel>
                                        <StackPanel Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Vertical" Margin="0 5 0 0">
                                            <Label Content="Testing" Width="100" HorizontalContentAlignment="Center"  HorizontalAlignment="Center" Background="Violet">
                                                <Label.ToolTip>
                                                    <ToolTip ToolTipService.ShowDuration="12000" Placement="Bottom"  HorizontalOffset="0" VerticalOffset="10" BorderBrush="Transparent" Margin="0 10 0 0" Background="Transparent">
                                                        <StackPanel Width="110" Background="Aqua">
                                                            <Polygon   Points="5,0 10,10, 0,10" Stroke="Aqua" Fill="Aqua" Grid.Row="0" HorizontalAlignment="Center" Margin="0,-8,0,8" Panel.ZIndex="1000" StrokeThickness="2" StrokeDashArray="1 0"   />
                                                            <Border x:Name="border" HorizontalAlignment="Center" VerticalAlignment="Top">
                                                                <TextBlock Text="22252 &#x0a;55514"></TextBlock>
                                                            </Border>
                                                        </StackPanel>
                                                    </ToolTip>
                                                </Label.ToolTip>
                                            </Label>

                                            <!--<Button Click="btnCallVaribles_Click" x:Name="btnCallVaribles" Style="{StaticResource callbtn}" Width="110" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" Background="#EEEEEE">

                                                <Button.ToolTip>
                                                    <ToolTip Placement="Bottom" HorizontalOffset="15" VerticalOffset="15" BorderBrush="Transparent" Margin="0 10 0 0" Background="Transparent">
                                                        <StackPanel Width="110" Background="Aqua">
                                                            -->
                                            <!--<Path Margin="10,0,0,0" Fill="#e5323232" Data="M 0 0 L -6 6 L -12 0 Z" HorizontalAlignment="Center" VerticalAlignment="Center"/>-->
                                            <!--
                                                            <Polygon   Points="5,0 10,10, 0,10" Stroke="Aqua" Fill="Aqua" Grid.Row="0" HorizontalAlignment="Center" Margin="0,-8,0,8" Panel.ZIndex="1000" StrokeThickness="2" StrokeDashArray="1 0"   />
                                                            <Border x:Name="border1" HorizontalAlignment="Center" VerticalAlignment="Top">
                                                                <TextBlock Text="22252 &#x0a;55514"></TextBlock>
                                                            </Border>
                                                        </StackPanel>
                                                    </ToolTip>
                                                </Button.ToolTip>
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                    <TextBlock FontFamily="Tahoma"  x:Name="txtlbl" Text="Call Variables" VerticalAlignment="Center" Margin="5 0 8 0"></TextBlock>
                                                    <Path x:Name="arrow" VerticalAlignment="Center"  HorizontalAlignment="Right" Stroke="#9D9D9D" StrokeThickness="2" Fill="#9D9D9D" Data="M 0 0 L 4 4 L 8 0 Z" Margin="0 1 8 0"/>
                                                    -->
                                            <!--<Path Margin="10,0,0,0" Fill="#e5323232" Data="M 0 0 L 6 6 L 12 0 Z"/>-->
                                            <!--<Polygon Points="0,0 8,5, 0,10" Stroke="Black" Fill="Black" />
                                        <Polygon Points="8,0 0,5, 8,10" Stroke="Black" Fill="Black" />-->
                                            <!--
                                                </StackPanel>
                                            </Button>-->
                                        </StackPanel>


                                        <!--<ComboBox HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="0" Grid.Column="1" Width="100" Text="Call Variables" BorderBrush="#EEEEEE">
                                <ComboBoxItem Content="Call Variables" IsSelected="True"></ComboBoxItem>
                            </ComboBox>-->
                                        <StackPanel Grid.Row="0" Grid.Column="3"  Margin="0 0 10 0" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                                            <Button   Style="{StaticResource callvariable}" x:Name="btnCallPick" Padding="7" Margin="0 0 2 0" Background="#34BE82" Foreground="White" FontWeight="UltraBold" BorderBrush="Transparent" Width="25" Height="25" Visibility="Visible">
                                                <Image Source="/Resources/call-answer-1.png" />
                                            </Button>
                                            <Button  Style="{StaticResource callvariable}" x:Name="btnHoldcall"  Padding="7" Margin="2 0 2 0" Background="#B91646" Foreground="White" FontWeight="UltraBold" Width="25" Height="25" Visibility="Visible">
                                                <Image Source="/Resources/call-hold.png" />
                                            </Button>
                                            <Button   Style="{StaticResource callvariable}" x:Name="btnResumecall"  Padding="7" Margin="2 0 2 0" Background="#B91646" Foreground="White" FontWeight="UltraBold" Width="25" Height="25" Visibility="Visible">
                                                <Image Source="/Resources/call-resume.png" />
                                            </Button>

                                            <Button   Style="{StaticResource callvariable}" x:Name="btnConsultcall"  Padding="7" Margin="2 0 2 0" Background="#B91646" Foreground="White" FontWeight="UltraBold" Width="25" Height="25" Visibility="Visible">
                                                <Image Source="/Resources/call-consult.png" />
                                            </Button>

                                            <Button  Style="{StaticResource callvariable}" x:Name="btntransfercall"  Padding="7" Margin="2 0 2 0" Background="#B91646" Foreground="White" FontWeight="UltraBold" Width="25" Height="25" Visibility="Collapsed">
                                                <Image Source="/Resources/call-conference.png" />
                                            </Button>
                                            <Button  Style="{StaticResource callvariable}" x:Name="btnCallEnd"  Padding="7" Margin="2 0 2 0" Background="#B91646" Foreground="White" FontWeight="UltraBold"  Width="25" Height="25" Visibility="Collapsed">
                                                <Image Source="/Resources/call-end.png" />
                                            </Button>
                                        </StackPanel>
                                        <Border Padding="15 12 15 12" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Background="#e5e3e3" Margin="7 7 7 20" BorderBrush="#9D9D9D" BorderThickness="1" x:Name="CallVariablePanel" Visibility="Collapsed">
                                            <Grid x:Name="tempgrid">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"></RowDefinition>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition></ColumnDefinition>
                                                    <ColumnDefinition></ColumnDefinition>
                                                </Grid.ColumnDefinitions>
                                                <StackPanel Grid.Row="0" Grid.Column="0">
                                                    <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 1" Margin="0 0 0 7"></TextBlock>
                                                    <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 2" Margin="0 0 0 7"></TextBlock>
                                                    <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 3" Margin="0 0 0 7"></TextBlock>
                                                    <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 4" Margin="0 0 0 7"></TextBlock>
                                                    <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 5" Margin="0 0 0 7"></TextBlock>
                                                </StackPanel>
                                                <StackPanel Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right">
                                                    <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 6" Margin="0 0 0 7"></TextBlock>
                                                    <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 7" Margin="0 0 0 7"></TextBlock>
                                                    <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 8" Margin="0 0 0 7"></TextBlock>
                                                    <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 9" Margin="0 0 0 7"></TextBlock>
                                                    <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 10" Margin="0 0 0 7"></TextBlock>
                                                </StackPanel>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </Border>



                                <Border BorderBrush="#9D9D9D" BorderThickness="1" Grid.Row="0" Margin="7 20 7 7" CornerRadius="2" Visibility="Visible" x:Name="ConsultCallBar">
                                    <Grid x:Name="ConsultCallPanelTool">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="40"></RowDefinition>
                                            <RowDefinition Height="*"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition></ColumnDefinition>
                                            <ColumnDefinition></ColumnDefinition>
                                            <ColumnDefinition></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Grid.Row="0" Grid.Column="0" Margin="7 3 10 0" >
                                            <TextBlock x:Name="txtConsultCallTiming" Foreground="#9D9D9D" Text="00:00:50" FontSize="14"></TextBlock>
                                            <StackPanel Orientation="Horizontal">
                                                <Image Source="/Resources/3050.png" Height="12" Width="12" Margin="0 0 3 0"/>
                                                <TextBlock FontWeight="Bold" FontFamily="Tahoma"  x:Name="txtConsultCallingNumber" Text="2204"></TextBlock>
                                            </StackPanel>

                                        </StackPanel>
                                        <StackPanel Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Vertical" Margin="0 5 0 0">
                                            <Button Click="btnCallVaribles_Click"  x:Name="btnConsultCallVaribles" Style="{StaticResource callbtn}" Width="110" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" Background="#EEEEEE">
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                    <TextBlock FontFamily="Tahoma"  x:Name="txtConsultlbl" Text="Call Variables" VerticalAlignment="Center" Margin="5 0 8 0"></TextBlock>
                                                    <Path x:Name="Consultarrow" VerticalAlignment="Center"  HorizontalAlignment="Right" Stroke="#9D9D9D" StrokeThickness="2" Fill="#9D9D9D" Data="M 0 0 L 4 4 L 8 0 Z" Margin="0 1 8 0"/>
                                                    <!--<Polygon Points="0,0 8,5, 0,10" Stroke="Black" Fill="Black" />-->
                                                    <!--<Polygon Points="8,0 0,5, 8,10" Stroke="Black" Fill="Black" />-->
                                                </StackPanel>
                                            </Button>
                                        </StackPanel>

                                        <StackPanel Grid.Row="0" Grid.Column="3"  Margin="0 0 10 0" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                                            <Button    Style="{StaticResource callvariable}" x:Name="btnConsultCallPick" Padding="7" Margin="0 0 2 0" Background="#34BE82" Foreground="White" FontWeight="UltraBold" BorderBrush="Transparent" Width="25" Height="25" Visibility="Collapsed">
                                                <Image Source="/Resources/call-answer-1.png" />
                                            </Button>
                                            <Button   Style="{StaticResource callvariable}" x:Name="btnConsultHoldcall"  Padding="7" Margin="2 0 2 0" Background="#B91646" Foreground="White" FontWeight="UltraBold" Width="25" Height="25" Visibility="Collapsed">
                                                <Image Source="/Resources/call-hold.png" />
                                            </Button>
                                            <Button   Style="{StaticResource callvariable}" x:Name="btnConsultResumecall"  Padding="7" Margin="2 0 2 0" Background="#B91646" Foreground="White" FontWeight="UltraBold" Width="25" Height="25" Visibility="Visible">
                                                <Image Source="/Resources/call-resume.png" />
                                            </Button>


                                            <Button  Style="{StaticResource callvariable}" x:Name="btnConsulttransfercall"  Padding="7" Margin="2 0 2 0" Background="#B91646" Foreground="White" FontWeight="UltraBold" Width="25" Height="25" Visibility="Visible">
                                                <Image Source="/Resources/call-conference.png" />
                                            </Button>
                                            <Button   Style="{StaticResource callvariable}" x:Name="btnConsultCallEnd"  Padding="7" Margin="2 0 2 0" Background="#B91646" Foreground="White" FontWeight="UltraBold"  Width="25" Height="25" Visibility="Visible">
                                                <Image Source="/Resources/call-end.png" />
                                            </Button>

                                        </StackPanel>
                                        <Border Padding="15 12 15 12" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Background="#e5e3e3" Margin="7 7 7 20" BorderBrush="#9D9D9D" BorderThickness="1" x:Name="ConsultCallVariablePanel" Visibility="Collapsed">
                                            <Grid x:Name="tempConsultgrid">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"></RowDefinition>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition></ColumnDefinition>
                                                    <ColumnDefinition></ColumnDefinition>
                                                </Grid.ColumnDefinitions>
                                                <StackPanel Grid.Row="0" Grid.Column="0">
                                                    <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 1" Margin="0 0 0 7"></TextBlock>
                                                    <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 2" Margin="0 0 0 7"></TextBlock>
                                                    <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 3" Margin="0 0 0 7"></TextBlock>
                                                    <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 4" Margin="0 0 0 7"></TextBlock>
                                                    <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 5" Margin="0 0 0 7"></TextBlock>
                                                </StackPanel>
                                                <StackPanel Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right">
                                                    <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 6" Margin="0 0 0 7"></TextBlock>
                                                    <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 7" Margin="0 0 0 7"></TextBlock>
                                                    <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 8" Margin="0 0 0 7"></TextBlock>
                                                    <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 9" Margin="0 0 0 7"></TextBlock>
                                                    <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 10" Margin="0 0 0 7"></TextBlock>
                                                </StackPanel>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </Border>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </Border>
            </TabItem>
            <TabItem Header="Supervisor Dashboard" Width="{Binding ElementName=c1, Path=ActualWidth}">
                <StackPanel>
                    <!--<Border BorderBrush="#C8C6C6" BorderThickness="0 0 0 1" Margin="0 0 0 8" Height="50">
                        <DockPanel LastChildFill="False">
                            <StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
                                <TextBlock x:Name="txtAgentName1" Foreground="#56C3D8" FontSize="15" FontWeight="UltraBold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="7 0 0 0" Text="Agent Name"></TextBlock>
                                <TextBlock x:Name="txtAgentExtension1" Foreground="#9D9D9D" Text="(EXT. 2206)" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="10" Margin="7 2 0 0" FontWeight="Bold"></TextBlock>
                            </StackPanel>
                            <ComboBox  x:Name="cbReasonCodes1" Margin="0 0 15 0" DockPanel.Dock="Right" IsEditable="True" IsReadOnly="True" Text="Talking" Style="{DynamicResource ComboBoxStyle1}" HorizontalAlignment="Center" VerticalAlignment="Center"  Grid.Row="0" Grid.Column="1" Width="100" BorderBrush="#EEEEEE">
                                <ComboBoxItem Content="Ready"></ComboBoxItem>
                            </ComboBox>
                        </DockPanel>
                    </Border>-->

                    <UniformGrid Rows="1" Columns="2" Margin="1,0">
                        <FrameworkElement x:Name="c11"/>
                        <!--no need to add the other three-->
                    </UniformGrid>
                    <TabControl BorderBrush="Transparent" BorderThickness="0">
                        <TabControl.Resources>
                            <Style TargetType="TabItem">
                                <Setter Property="HeaderTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <TextBlock FontWeight="Bold" Text="{Binding}" FontSize="13"/>
                                        </DataTemplate>

                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="TabItem">
                                            <Grid x:Name="panel">
                                                <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter TargetName="panel" Property="Background" Value="#F4F4F4" />
                                                </Trigger>
                                                <Trigger Property="IsSelected" Value="False">
                                                    <Setter TargetName="panel" Property="Background" Value="White" />
                                                    <Setter Property="Foreground" Value="#d3d3d3"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                        </TabControl.Resources>
                        <TabItem Header="Queue Stats" Width="{Binding ElementName=c1, Path=ActualWidth}" Height="50">
                            <Border BorderBrush="#C8C6C6" BorderThickness="1">
                                <StackPanel>
                                    <!--<Border BorderBrush="#C8C6C6" BorderThickness="0 0 0 1" Margin="0 0 0 8" Height="50">
                                        <DockPanel LastChildFill="False">
                                            <StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
                                                <TextBlock x:Name="txtAgentName1" Foreground="#56C3D8" FontSize="15" FontWeight="UltraBold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="7 0 0 0" Text="Agent Name"></TextBlock>
                                                <TextBlock x:Name="txtAgentExtension1" Foreground="#9D9D9D" Text="(EXT. 2206)" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="10" Margin="7 2 0 0" FontWeight="Bold"></TextBlock>
                                            </StackPanel>
                                            <ComboBox  x:Name="cbReasonCodes1" Margin="0 0 15 0" DockPanel.Dock="Right" IsEditable="True" IsReadOnly="True" Text="Talking" Style="{DynamicResource ComboBoxStyle1}" HorizontalAlignment="Center" VerticalAlignment="Center"  Grid.Row="0" Grid.Column="1" Width="100" BorderBrush="#EEEEEE">
                                                <ComboBoxItem Content="Ready"></ComboBoxItem>
                                            </ComboBox>
                                        </DockPanel>
                                    </Border>-->

                                    <StackPanel  Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 0 0 8">
                                        <Border BorderBrush="#C8C6C6" BorderThickness="1" Margin="0 0 3 0" Padding=" 3 0 3 0">
                                            <Button Style="{StaticResource btnpad}" Padding="10" Background="Transparent" FontWeight="UltraBold"  Height="25" Width="25">
                                                <Image Source="/Resources/icon-dialer.png" Height="25" Width="25" />
                                            </Button>
                                        </Border>
                                        <TextBox  x:Name="txtDailNumber1" Width="120" Margin="2 0 0 0" BorderBrush="#C8C6C6" BorderThickness="1" Text="1702" VerticalAlignment="Center" Padding="10" FontWeight="Bold"></TextBox>
                                    </StackPanel>



                                    <Border BorderBrush="#C8C6C6" BorderThickness="1" Background="#EEEEEE" Margin="5 0 5 0" Name="CallPanel1"  Visibility="Visible">
                                        <StackPanel>
                                            <Border BorderBrush="#9D9D9D" BorderThickness="1" Grid.Row="0" Margin="7 7 7 7" CornerRadius="2">
                                                <Grid x:Name="toolbox1">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="40"></RowDefinition>
                                                        <RowDefinition Height="*"></RowDefinition>
                                                    </Grid.RowDefinitions>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition></ColumnDefinition>
                                                        <ColumnDefinition></ColumnDefinition>
                                                        <ColumnDefinition></ColumnDefinition>
                                                    </Grid.ColumnDefinitions>
                                                    <StackPanel Grid.Row="0" Grid.Column="0" Margin="7 3 10 0" >
                                                        <TextBlock x:Name="txtCallTiming1" Foreground="#9D9D9D" Text="00:00:05" FontSize="14"></TextBlock>
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/Resources/3050.png" Height="12" Width="12" Margin="0 0 3 0"/>
                                                            <TextBlock FontWeight="Bold" FontFamily="Tahoma"  x:Name="txtCallingNumber1" Text="+923205500003"></TextBlock>
                                                        </StackPanel>

                                                    </StackPanel>
                                                    <StackPanel Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Vertical" Margin="0 5 0 0">
                                                        <Label Content="Testing" Width="100" HorizontalContentAlignment="Center"  HorizontalAlignment="Center" Background="Violet">
                                                            <Label.ToolTip>
                                                                <ToolTip ToolTipService.ShowDuration="12000" Placement="Bottom"  HorizontalOffset="0" VerticalOffset="10" BorderBrush="Transparent" Margin="0 10 0 0" Background="Transparent">
                                                                    <StackPanel Width="110" Background="Aqua">
                                                                        <Polygon   Points="5,0 10,10, 0,10" Stroke="Aqua" Fill="Aqua" Grid.Row="0" HorizontalAlignment="Center" Margin="0,-8,0,8" Panel.ZIndex="1000" StrokeThickness="2" StrokeDashArray="1 0"   />
                                                                        <Border x:Name="border1" HorizontalAlignment="Center" VerticalAlignment="Top">
                                                                            <TextBlock Text="22252 &#x0a;55514"></TextBlock>
                                                                        </Border>
                                                                    </StackPanel>
                                                                </ToolTip>
                                                            </Label.ToolTip>
                                                        </Label>

                                                        <!--<Button Click="btnCallVaribles_Click" x:Name="btnCallVaribles" Style="{StaticResource callbtn}" Width="110" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" Background="#EEEEEE">

                                                <Button.ToolTip>
                                                    <ToolTip Placement="Bottom" HorizontalOffset="15" VerticalOffset="15" BorderBrush="Transparent" Margin="0 10 0 0" Background="Transparent">
                                                        <StackPanel Width="110" Background="Aqua">
                                                            -->
                                                        <!--<Path Margin="10,0,0,0" Fill="#e5323232" Data="M 0 0 L -6 6 L -12 0 Z" HorizontalAlignment="Center" VerticalAlignment="Center"/>-->
                                                        <!--
                                                            <Polygon   Points="5,0 10,10, 0,10" Stroke="Aqua" Fill="Aqua" Grid.Row="0" HorizontalAlignment="Center" Margin="0,-8,0,8" Panel.ZIndex="1000" StrokeThickness="2" StrokeDashArray="1 0"   />
                                                            <Border x:Name="border1" HorizontalAlignment="Center" VerticalAlignment="Top">
                                                                <TextBlock Text="22252 &#x0a;55514"></TextBlock>
                                                            </Border>
                                                        </StackPanel>
                                                    </ToolTip>
                                                </Button.ToolTip>
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                    <TextBlock FontFamily="Tahoma"  x:Name="txtlbl" Text="Call Variables" VerticalAlignment="Center" Margin="5 0 8 0"></TextBlock>
                                                    <Path x:Name="arrow" VerticalAlignment="Center"  HorizontalAlignment="Right" Stroke="#9D9D9D" StrokeThickness="2" Fill="#9D9D9D" Data="M 0 0 L 4 4 L 8 0 Z" Margin="0 1 8 0"/>
                                                    -->
                                                        <!--<Path Margin="10,0,0,0" Fill="#e5323232" Data="M 0 0 L 6 6 L 12 0 Z"/>-->
                                                        <!--<Polygon Points="0,0 8,5, 0,10" Stroke="Black" Fill="Black" />
                                        <Polygon Points="8,0 0,5, 8,10" Stroke="Black" Fill="Black" />-->
                                                        <!--
                                                </StackPanel>
                                            </Button>-->
                                                    </StackPanel>


                                                    <!--<ComboBox HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="0" Grid.Column="1" Width="100" Text="Call Variables" BorderBrush="#EEEEEE">
                                <ComboBoxItem Content="Call Variables" IsSelected="True"></ComboBoxItem>
                            </ComboBox>-->
                                                    <StackPanel Grid.Row="0" Grid.Column="3"  Margin="0 0 10 0" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                                                        <Button   Style="{StaticResource callvariable}" x:Name="btnCallPick1" Padding="7" Margin="0 0 2 0" Background="#34BE82" Foreground="White" FontWeight="UltraBold" BorderBrush="Transparent" Width="25" Height="25" Visibility="Visible">
                                                            <Image Source="/Resources/call-answer-1.png" />
                                                        </Button>
                                                        <Button  Style="{StaticResource callvariable}" x:Name="btnHoldcall1"  Padding="7" Margin="2 0 2 0" Background="#B91646" Foreground="White" FontWeight="UltraBold" Width="25" Height="25" Visibility="Visible">
                                                            <Image Source="/Resources/call-hold.png" />
                                                        </Button>
                                                        <Button   Style="{StaticResource callvariable}" x:Name="btnResumecall1"  Padding="7" Margin="2 0 2 0" Background="#B91646" Foreground="White" FontWeight="UltraBold" Width="25" Height="25" Visibility="Visible">
                                                            <Image Source="/Resources/call-resume.png" />
                                                        </Button>

                                                        <Button   Style="{StaticResource callvariable}" x:Name="btnConsultcall1"  Padding="7" Margin="2 0 2 0" Background="#B91646" Foreground="White" FontWeight="UltraBold" Width="25" Height="25" Visibility="Visible">
                                                            <Image Source="/Resources/call-consult.png" />
                                                        </Button>

                                                        <Button  Style="{StaticResource callvariable}" x:Name="btntransfercall1"  Padding="7" Margin="2 0 2 0" Background="#B91646" Foreground="White" FontWeight="UltraBold" Width="25" Height="25" Visibility="Collapsed">
                                                            <Image Source="/Resources/call-conference.png" />
                                                        </Button>
                                                        <Button  Style="{StaticResource callvariable}" x:Name="btnCallEnd1"  Padding="7" Margin="2 0 2 0" Background="#B91646" Foreground="White" FontWeight="UltraBold"  Width="25" Height="25" Visibility="Collapsed">
                                                            <Image Source="/Resources/call-end.png" />
                                                        </Button>
                                                    </StackPanel>
                                                    <Border Padding="15 12 15 12" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Background="#e5e3e3" Margin="7 7 7 20" BorderBrush="#9D9D9D" BorderThickness="1" x:Name="CallVariablePanel1" Visibility="Collapsed">
                                                        <Grid x:Name="tempgrid1">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*"></RowDefinition>
                                                            </Grid.RowDefinitions>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition></ColumnDefinition>
                                                                <ColumnDefinition></ColumnDefinition>
                                                            </Grid.ColumnDefinitions>
                                                            <StackPanel Grid.Row="0" Grid.Column="0">
                                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 1" Margin="0 0 0 7"></TextBlock>
                                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 2" Margin="0 0 0 7"></TextBlock>
                                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 3" Margin="0 0 0 7"></TextBlock>
                                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 4" Margin="0 0 0 7"></TextBlock>
                                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 5" Margin="0 0 0 7"></TextBlock>
                                                            </StackPanel>
                                                            <StackPanel Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right">
                                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 6" Margin="0 0 0 7"></TextBlock>
                                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 7" Margin="0 0 0 7"></TextBlock>
                                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 8" Margin="0 0 0 7"></TextBlock>
                                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 9" Margin="0 0 0 7"></TextBlock>
                                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 10" Margin="0 0 0 7"></TextBlock>
                                                            </StackPanel>
                                                        </Grid>
                                                    </Border>
                                                </Grid>
                                            </Border>



                                            <Border BorderBrush="#9D9D9D" BorderThickness="1" Grid.Row="0" Margin="7 20 7 7" CornerRadius="2" Visibility="Visible" x:Name="ConsultCallBar1">
                                                <Grid x:Name="ConsultCallPanelTool1">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="40"></RowDefinition>
                                                        <RowDefinition Height="*"></RowDefinition>
                                                    </Grid.RowDefinitions>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition></ColumnDefinition>
                                                        <ColumnDefinition></ColumnDefinition>
                                                        <ColumnDefinition></ColumnDefinition>
                                                    </Grid.ColumnDefinitions>
                                                    <StackPanel Grid.Row="0" Grid.Column="0" Margin="7 3 10 0" >
                                                        <TextBlock x:Name="txtConsultCallTiming1" Foreground="#9D9D9D" Text="00:00:50" FontSize="14"></TextBlock>
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="/Resources/3050.png" Height="12" Width="12" Margin="0 0 3 0"/>
                                                            <TextBlock FontWeight="Bold" FontFamily="Tahoma"  x:Name="txtConsultCallingNumber1" Text="2204"></TextBlock>
                                                        </StackPanel>

                                                    </StackPanel>
                                                    <StackPanel Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Vertical" Margin="0 5 0 0">
                                                        <Button Click="btnCallVaribles_Click"  x:Name="btnConsultCallVaribles1" Style="{StaticResource callbtn}" Width="110" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center" Background="#EEEEEE">
                                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                <TextBlock FontFamily="Tahoma"  x:Name="txtConsultlbl1" Text="Call Variables" VerticalAlignment="Center" Margin="5 0 8 0"></TextBlock>
                                                                <Path x:Name="Consultarrow1" VerticalAlignment="Center"  HorizontalAlignment="Right" Stroke="#9D9D9D" StrokeThickness="2" Fill="#9D9D9D" Data="M 0 0 L 4 4 L 8 0 Z" Margin="0 1 8 0"/>
                                                                <!--<Polygon Points="0,0 8,5, 0,10" Stroke="Black" Fill="Black" />-->
                                                                <!--<Polygon Points="8,0 0,5, 8,10" Stroke="Black" Fill="Black" />-->
                                                            </StackPanel>
                                                        </Button>
                                                    </StackPanel>

                                                    <StackPanel Grid.Row="0" Grid.Column="3"  Margin="0 0 10 0" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                                                        <Button    Style="{StaticResource callvariable}" x:Name="btnConsultCallPick1" Padding="7" Margin="0 0 2 0" Background="#34BE82" Foreground="White" FontWeight="UltraBold" BorderBrush="Transparent" Width="25" Height="25" Visibility="Collapsed">
                                                            <Image Source="/Resources/call-answer-1.png" />
                                                        </Button>
                                                        <Button   Style="{StaticResource callvariable}" x:Name="btnConsultHoldcall1"  Padding="7" Margin="2 0 2 0" Background="#B91646" Foreground="White" FontWeight="UltraBold" Width="25" Height="25" Visibility="Collapsed">
                                                            <Image Source="/Resources/call-hold.png" />
                                                        </Button>
                                                        <Button   Style="{StaticResource callvariable}" x:Name="btnConsultResumecall1"  Padding="7" Margin="2 0 2 0" Background="#B91646" Foreground="White" FontWeight="UltraBold" Width="25" Height="25" Visibility="Visible">
                                                            <Image Source="/Resources/call-resume.png" />
                                                        </Button>


                                                        <Button  Style="{StaticResource callvariable}" x:Name="btnConsulttransfercall1"  Padding="7" Margin="2 0 2 0" Background="#B91646" Foreground="White" FontWeight="UltraBold" Width="25" Height="25" Visibility="Visible">
                                                            <Image Source="/Resources/call-conference.png" />
                                                        </Button>
                                                        <Button   Style="{StaticResource callvariable}" x:Name="btnConsultCallEnd1"  Padding="7" Margin="2 0 2 0" Background="#B91646" Foreground="White" FontWeight="UltraBold"  Width="25" Height="25" Visibility="Visible">
                                                            <Image Source="/Resources/call-end.png" />
                                                        </Button>

                                                    </StackPanel>
                                                    <Border Padding="15 12 15 12" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Background="#e5e3e3" Margin="7 7 7 20" BorderBrush="#9D9D9D" BorderThickness="1" x:Name="ConsultCallVariablePanel1" Visibility="Collapsed">
                                                        <Grid x:Name="tempConsultgrid1">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*"></RowDefinition>
                                                            </Grid.RowDefinitions>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition></ColumnDefinition>
                                                                <ColumnDefinition></ColumnDefinition>
                                                            </Grid.ColumnDefinitions>
                                                            <StackPanel Grid.Row="0" Grid.Column="0">
                                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 1" Margin="0 0 0 7"></TextBlock>
                                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 2" Margin="0 0 0 7"></TextBlock>
                                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 3" Margin="0 0 0 7"></TextBlock>
                                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 4" Margin="0 0 0 7"></TextBlock>
                                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 5" Margin="0 0 0 7"></TextBlock>
                                                            </StackPanel>
                                                            <StackPanel Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right">
                                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 6" Margin="0 0 0 7"></TextBlock>
                                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 7" Margin="0 0 0 7"></TextBlock>
                                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 8" Margin="0 0 0 7"></TextBlock>
                                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 9" Margin="0 0 0 7"></TextBlock>
                                                                <TextBlock FontSize="14" FontWeight="DemiBold" Foreground="#6f6c6c" Text="Call Variable 10" Margin="0 0 0 7"></TextBlock>
                                                            </StackPanel>
                                                        </Grid>
                                                    </Border>
                                                </Grid>
                                            </Border>
                                        </StackPanel>
                                    </Border>
                                </StackPanel>
                            </Border>
                        </TabItem>

                        <!--Start Team Performance Tab-->
                        <TabItem Header="Team Performance" Width="{Binding ElementName=c1, Path=ActualWidth}" BorderBrush="Transparent" BorderThickness="0">
                            <StackPanel HorizontalAlignment="Stretch" >
                                <!--<StackPanel HorizontalAlignment="Stretch" Margin="10" >
                                    <ComboBox x:Name="cbReasonCodes1" DockPanel.Dock="Right" IsEditable="True" IsReadOnly="True" Text="Talking"  HorizontalAlignment="Stretch" VerticalAlignment="Center"  BorderBrush="#EEEEEE" Style="{DynamicResource ComboBoxStyleTeamPerformance}">
                                        <ComboBoxItem Content="Ready"/>
                                    </ComboBox>
                                </StackPanel>-->
                                <!--Background="#F7F7F7"-->
                                <Grid Margin="0 5 0 0" Background="#F7F7F7">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="40"></RowDefinition>
                                        <RowDefinition Height="30"></RowDefinition>
                                        <RowDefinition Height="30"></RowDefinition>
                                        <RowDefinition Height="*"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Center" Orientation="Vertical"  Width="306">
                                        <ComboBox Height="25"  x:Name="cbReasonCodes1" DockPanel.Dock="Right" IsEditable="True" IsReadOnly="True" Text="MEDICARE TEAM"  HorizontalAlignment="Stretch" VerticalAlignment="Center"  BorderBrush="#EEEEEE" Style="{DynamicResource ComboBoxStyleTeamPerformance}">
                                            <ComboBoxItem Content="Ready"/>
                                        </ComboBox>
                                    </StackPanel>

                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Width="Auto"   Grid.Row="1"    VerticalAlignment="Center">
                                        <Button Style="{StaticResource btnTeamPerformance}" Width="100" Height="25"  Margin="0 0 0 3" Background="White" BorderBrush="#A7A5A5" BorderThickness="1">
                                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="Stop Monitoring" Padding="10 2 10 2" Foreground="#A7A5A5"></TextBlock>
                                        </Button>
                                        <Button Style="{StaticResource btnTeamPerformance}" Width="100" Height="25"  Margin="3 0 0 0" Background="#CB2424" BorderBrush="#CB2424" BorderThickness="1">
                                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="Not Ready" Padding="10 2 10 2" Foreground="White"></TextBlock>
                                        </Button>
                                        <Button Style="{StaticResource btnTeamPerformance}" Width="100" Height="25" Margin="3 0 0 0" Background="White" BorderBrush="#7be5bd" BorderThickness="1">
                                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="Ready" Padding="10 2 10 2" Foreground="#7be5bd"></TextBlock>
                                        </Button>
                                    </StackPanel>

                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Width="Auto"  Grid.Row="2"    VerticalAlignment="Center">
                                        <Button Style="{StaticResource btnTeamPerformance}" Width="100" Height="25"  Margin="3 0 0 0" Background="#A7A5A5" BorderThickness="0">
                                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="SignOut" Padding="10 2 10 2" Foreground="White"></TextBlock>
                                        </Button>

                                        <!--<Rectangle VerticalAlignment="Stretch" Width="2" Margin="3 0 0 0" Stroke="#DEDEDE" Fill="#DEDEDE"/>-->

                                        <Button Style="{StaticResource btnTeamPerformance}" Width="100" Height="25" Margin="3 0 0 0" Background="Black" BorderThickness="0">
                                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="Bergeln" Padding="10 2 10 2" Foreground="White"></TextBlock>
                                        </Button>
                                        <Button Style="{StaticResource btnTeamPerformance}" Width="100" Height="25"  Margin="3 0 5 0" Background="White" BorderBrush="#A7A5A5" BorderThickness="1">
                                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="Drop Participant" Padding="10 2 10 2" Foreground="#A7A5A5"></TextBlock>
                                        </Button>
                                    </StackPanel>

                                    <StackPanel Grid.Row="3" HorizontalAlignment="Stretch" Orientation="Vertical"  Width="306">
                                        <Grid>
                                            <TextBox   VerticalAlignment="Center" HorizontalAlignment="Stretch" x:Name="SearchTermTextBox" Margin="0 5 0 5" Padding="4 0 0 0" HorizontalContentAlignment="Left" VerticalContentAlignment="Center">
                                                <TextBox.Resources>
                                                    <Style TargetType="{x:Type Border}">
                                                        <Setter Property="CornerRadius" Value="5"/>
                                                        <Setter Property="Height" Value="25"/>

                                                        <Setter Property="BorderThickness" Value="1"></Setter>
                                                        <!--<Setter Property="HorizontalAlignment" Value="Center"></Setter>
                        <Setter Property="VerticalAlignment" Value="Center"></Setter>-->

                                                    </Style>
                                                </TextBox.Resources>
                                            </TextBox>
                                            <!--<TextBlock Text="Enter Search Term Here" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" Foreground="DarkGray">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Text, ElementName=SearchTermTextBox}" Value="">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>-->
                                        </Grid>
                                    </StackPanel>
                                </Grid>
                                <StackPanel HorizontalAlignment="Stretch">
                                    <DataGrid  Name="dgSimple" VerticalAlignment="Center" VerticalContentAlignment="Center" CellStyle="{StaticResource Body_Content_DataGrid_Centering}" Height="350" EnableRowVirtualization="False">
                                        <!--<DataGrid.Resources>
                <Style TargetType="ScrollBar">
                    <Setter Property="Background" Value="Green"></Setter>
                    <Style.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="Width" Value="50"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>-->
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Id" Binding="{Binding Id}" IsReadOnly="True"/>
                                            <DataGridTextColumn Header="First Name" Binding="{Binding FirrstName}" IsReadOnly="True"/>
                                            <DataGridTextColumn Header="Last Name" Binding="{Binding LastName}" IsReadOnly="True" />
                                            <DataGridTextColumn Header="Name" Binding="{Binding Name}" IsReadOnly="True" />
                                            <DataGridTextColumn Header="Birthday" Binding="{Binding Birthday}" IsReadOnly="True"/>
                                        </DataGrid.Columns>
                                    </DataGrid>

                                </StackPanel>

                            </StackPanel>
                        </TabItem>
                        <!--End Team Performance Tab-->
                    </TabControl>
                </StackPanel>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
